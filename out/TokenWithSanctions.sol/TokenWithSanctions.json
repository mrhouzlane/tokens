{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "intialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC1363EOAReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC1363EOASpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC1363InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC1363InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        }
      ],
      "name": "banUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "banned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onTransferReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001ee138038062001ee18339810160408190526200003491620002d0565b806040518060400160405280600381526020016252534b60e81b8152506040518060400160405280600a81526020016952617265536b696c6c7360b01b8152508160039081620000859190620003a7565b506004620000948282620003a7565b5050506001600160a01b038116620000c757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d281620000ef565b50620000e8816801158e460913d000006200010d565b506200049b565b600680546001600160a01b03191690556200010a816200014b565b50565b6001600160a01b038216620001395760405163ec442f0560e01b815260006004820152602401620000be565b62000147600083836200019d565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316620001cc578060026000828254620001c0919062000473565b90915550620002409050565b6001600160a01b03831660009081526020819052604090205481811015620002215760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000be565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200025e576002805482900390556200027d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c391815260200190565b60405180910390a3505050565b600060208284031215620002e357600080fd5b81516001600160a01b0381168114620002fb57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200032d57607f821691505b6020821081036200034e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a257600081815260208120601f850160051c810160208610156200037d5750805b601f850160051c820191505b818110156200039e5782815560010162000389565b5050505b505050565b81516001600160401b03811115620003c357620003c362000302565b620003db81620003d4845462000318565b8462000354565b602080601f831160018114620004135760008415620003fa5750858301515b600019600386901b1c1916600185901b1785556200039e565b600085815260208120601f198616915b82811015620004445788860151825594840194600190910190840162000423565b5085821015620004635787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049557634e487b7160e01b600052601160045260246000fd5b92915050565b611a3680620004ab6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806379ba5097116100ee578063a9059cbb11610097578063d8fbe99411610071578063d8fbe994146103df578063dd62ed3e146103f2578063e30c397814610438578063f2fde38b1461045657600080fd5b8063a9059cbb146103a6578063c1d34b89146103b9578063cae9ca51146103cc57600080fd5b80638da5cb5b116100c85780638da5cb5b1461033c57806395d89b411461037b5780639c8d83bb1461038357600080fd5b806379ba5097146102b85780637f205499146102c057806388a7ca5c146102d357600080fd5b8063313ce5671161015057806340c10f191161012a57806340c10f191461026557806370a082311461027a578063715018a6146102b057600080fd5b8063313ce567146102305780633177029f1461023f5780634000aea01461025257600080fd5b80631296ee62116101815780631296ee62146101f857806318160ddd1461020b57806323b872dd1461021d57600080fd5b806301ffc9a7146101a857806306fdde03146101d0578063095ea7b3146101e5575b600080fd5b6101bb6101b6366004611446565b610469565b60405190151581526020015b60405180910390f35b6101d8610502565b6040516101c791906114c7565b6101bb6101f3366004611503565b610594565b6101bb610206366004611503565b6105ac565b6002545b6040519081526020016101c7565b6101bb61022b36600461152d565b6105cf565b604051601281526020016101c7565b6101bb61024d366004611503565b6105f3565b6101bb610260366004611643565b61060f565b610278610273366004611503565b61062d565b005b61020f61028836600461169a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610278610643565b610278610657565b6102786102ce3660046116b5565b6106d3565b61030b6102e136600461172a565b7f88a7ca5c0000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c7565b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b6101d861077f565b6101bb61039136600461169a565b60076020526000908152604090205460ff1681565b6101bb6103b4366004611503565b61078e565b6101bb6103c73660046117c5565b6107a3565b6101bb6103da366004611643565b6107bd565b6101bb6103ed36600461152d565b6107d5565b61020f61040036600461182d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60065473ffffffffffffffffffffffffffffffffffffffff16610356565b61027861046436600461169a565b6107f2565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb0202a110000000000000000000000000000000000000000000000000000000014806104fc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461051190611860565b80601f016020809104026020016040519081016040528092919081815260200182805461053d90611860565b801561058a5780601f1061055f5761010080835404028352916020019161058a565b820191906000526020600020905b81548152906001019060200180831161056d57829003601f168201915b5050505050905090565b6000336105a28185856108a2565b5060019392505050565b60006105c883836040518060200160405280600081525061060f565b9392505050565b6000336105dd8582856108b4565b6105e885858561097d565b506001949350505050565b60006105c88383604051806020016040528060008152506107bd565b600061061a84610a28565b610625848484610b32565b949350505050565b610635610b4b565b61063f8282610b9e565b5050565b61064b610b4b565b6106556000610bfa565b565b600654339073ffffffffffffffffffffffffffffffffffffffff1681146106c7576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b6106d081610bfa565b50565b6106db610b4b565b8060005b81811015610779576001600760008686858181106106ff576106ff6118b3565b9050602002016020810190610714919061169a565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061077181611911565b9150506106df565b50505050565b60606004805461051190611860565b600061079983610a28565b6105c88383610c2b565b60006107b08585856105cf565b506105e885858585610c39565b60006107c98484610594565b506105a2848484610e7c565b6000610625848484604051806020016040528060008152506107a3565b6107fa610b4b565b6006805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915561085d60055473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6108af83838360016110ae565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610779578181101561096e576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016106be565b610779848484840360006110ae565b73ffffffffffffffffffffffffffffffffffffffff83166109cd576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff8216610a1d576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b6108af8383836111f6565b3360009081526007602052604090205460ff1615610aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e6465722069732062616e6e65640000000000000000000000000000000060448201526064016106be565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090205460ff16156106d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526563697069656e742069732062616e6e65640000000000000000000000000060448201526064016106be565b6000610b3e848461078e565b506105a233858585610c39565b60055473ffffffffffffffffffffffffffffffffffffffff163314610655576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff8216610bee576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b61063f600083836111f6565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556106d0816113a1565b6000336105a281858561097d565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610ca2576040517f14b41af400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106be565b6040517f88a7ca5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388a7ca5c90610cfa903390889087908790600401611949565b6020604051808303816000875af1925050508015610d53575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d5091810190611992565b60015b610de2573d808015610d81576040519150601f19603f3d011682016040523d82523d6000602084013e610d86565b606091505b508051600003610dda576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f88a7ca5c0000000000000000000000000000000000000000000000000000000014610e75576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610ee5576040517f0778150c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106be565b6040517f7b04a2d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690637b04a2d090610f3b903390869086906004016119af565b6020604051808303816000875af1925050508015610f94575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f9191810190611992565b60015b61101b573d808015610fc2576040519150601f19603f3d011682016040523d82523d6000602084013e610fc7565b606091505b508051600003610dda576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f7b04a2d00000000000000000000000000000000000000000000000000000000014610779576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff84166110fe576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff831661114e576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610779578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111e891815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff831661122e57806002600082825461122391906119ed565b909155506112e09050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156112b4576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018390526064016106be565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff821661130957600280548290039055611335565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161139491815260200190565b60405180910390a3505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106d057600080fd5b60006020828403121561145857600080fd5b81356105c881611418565b6000815180845260005b818110156114895760208185018101518683018201520161146d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006105c86020830184611463565b803573ffffffffffffffffffffffffffffffffffffffff811681146114fe57600080fd5b919050565b6000806040838503121561151657600080fd5b61151f836114da565b946020939093013593505050565b60008060006060848603121561154257600080fd5b61154b846114da565b9250611559602085016114da565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126115a957600080fd5b813567ffffffffffffffff808211156115c4576115c4611569565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561160a5761160a611569565b8160405283815286602085880101111561162357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561165857600080fd5b611661846114da565b925060208401359150604084013567ffffffffffffffff81111561168457600080fd5b61169086828701611598565b9150509250925092565b6000602082840312156116ac57600080fd5b6105c8826114da565b600080602083850312156116c857600080fd5b823567ffffffffffffffff808211156116e057600080fd5b818501915085601f8301126116f457600080fd5b81358181111561170357600080fd5b8660208260051b850101111561171857600080fd5b60209290920196919550909350505050565b60008060008060006080868803121561174257600080fd5b61174b866114da565b9450611759602087016114da565b935060408601359250606086013567ffffffffffffffff8082111561177d57600080fd5b818801915088601f83011261179157600080fd5b8135818111156117a057600080fd5b8960208285010111156117b257600080fd5b9699959850939650602001949392505050565b600080600080608085870312156117db57600080fd5b6117e4856114da565b93506117f2602086016114da565b925060408501359150606085013567ffffffffffffffff81111561181557600080fd5b61182187828801611598565b91505092959194509250565b6000806040838503121561184057600080fd5b611849836114da565b9150611857602084016114da565b90509250929050565b600181811c9082168061187457607f821691505b6020821081036118ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611942576119426118e2565b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526119886080830184611463565b9695505050505050565b6000602082840312156119a457600080fd5b81516105c881611418565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006119e46060830184611463565b95945050505050565b808201808211156104fc576104fc6118e256fea264697066735822122081834e57c9f405dcb828211dcaec5ae58681e18e7e631974e1f38010daa629dc64736f6c63430008140033",
    "sourceMap": "712:1869:19:-:0;;;837:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;905:11;1896:113:8;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:8;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:5;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:5;;1350:1;1322:31;;;3176:51:23;3149:18;;1322:31:5;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;928:28:19::2;934:11:::0;947:8:::2;928:5;:28::i;:::-;837:126:::0;712:1869;;1528:153:6;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:6;;;1640:34;1665:8;1640:24;:34::i;:::-;1528:153;:::o;7721:208:8:-;-1:-1:-1;;;;;7791:21:8;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:8;;7864:1;7835:32;;;3176:51:23;3149:18;;7835:32:8;3030:203:23;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:5:-;3004:6;;;-1:-1:-1;;;;;3020:17:5;;;-1:-1:-1;;;;;;3020:17:5;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6271:1107:8:-;-1:-1:-1;;;;;6360:18:8;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;-1:-1:-1;;;;;6570:15:8;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:8;;-1:-1:-1;;;;;3685:32:23;;6649:50:8;;;3667:51:23;3734:18;;;3727:34;;;3777:18;;;3770:34;;;3640:18;;6649:50:8;3465:345:23;6599:115:8;-1:-1:-1;;;;;6834:15:8;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:8;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:8;7355:4;-1:-1:-1;;;;;7346:25:8;;7365:5;7346:25;;;;3961::23;;3949:2;3934:18;;3815:177;7346:25:8;;;;;;;;6271:1107;;;:::o;14:290:23:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:23;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:23:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:23;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:23;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:23;;;2875:26;2826:89;-1:-1:-1;;1630:1:23;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:23;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:23;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:23;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:23:o;3238:222::-;3303:9;;;3324:10;;;3321:133;;;3376:10;3371:3;3367:20;3364:1;3357:31;3411:4;3408:1;3401:15;3439:4;3436:1;3429:15;3321:133;3238:222;;;;:::o;3815:177::-;712:1869:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c806379ba5097116100ee578063a9059cbb11610097578063d8fbe99411610071578063d8fbe994146103df578063dd62ed3e146103f2578063e30c397814610438578063f2fde38b1461045657600080fd5b8063a9059cbb146103a6578063c1d34b89146103b9578063cae9ca51146103cc57600080fd5b80638da5cb5b116100c85780638da5cb5b1461033c57806395d89b411461037b5780639c8d83bb1461038357600080fd5b806379ba5097146102b85780637f205499146102c057806388a7ca5c146102d357600080fd5b8063313ce5671161015057806340c10f191161012a57806340c10f191461026557806370a082311461027a578063715018a6146102b057600080fd5b8063313ce567146102305780633177029f1461023f5780634000aea01461025257600080fd5b80631296ee62116101815780631296ee62146101f857806318160ddd1461020b57806323b872dd1461021d57600080fd5b806301ffc9a7146101a857806306fdde03146101d0578063095ea7b3146101e5575b600080fd5b6101bb6101b6366004611446565b610469565b60405190151581526020015b60405180910390f35b6101d8610502565b6040516101c791906114c7565b6101bb6101f3366004611503565b610594565b6101bb610206366004611503565b6105ac565b6002545b6040519081526020016101c7565b6101bb61022b36600461152d565b6105cf565b604051601281526020016101c7565b6101bb61024d366004611503565b6105f3565b6101bb610260366004611643565b61060f565b610278610273366004611503565b61062d565b005b61020f61028836600461169a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610278610643565b610278610657565b6102786102ce3660046116b5565b6106d3565b61030b6102e136600461172a565b7f88a7ca5c0000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c7565b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b6101d861077f565b6101bb61039136600461169a565b60076020526000908152604090205460ff1681565b6101bb6103b4366004611503565b61078e565b6101bb6103c73660046117c5565b6107a3565b6101bb6103da366004611643565b6107bd565b6101bb6103ed36600461152d565b6107d5565b61020f61040036600461182d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60065473ffffffffffffffffffffffffffffffffffffffff16610356565b61027861046436600461169a565b6107f2565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb0202a110000000000000000000000000000000000000000000000000000000014806104fc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461051190611860565b80601f016020809104026020016040519081016040528092919081815260200182805461053d90611860565b801561058a5780601f1061055f5761010080835404028352916020019161058a565b820191906000526020600020905b81548152906001019060200180831161056d57829003601f168201915b5050505050905090565b6000336105a28185856108a2565b5060019392505050565b60006105c883836040518060200160405280600081525061060f565b9392505050565b6000336105dd8582856108b4565b6105e885858561097d565b506001949350505050565b60006105c88383604051806020016040528060008152506107bd565b600061061a84610a28565b610625848484610b32565b949350505050565b610635610b4b565b61063f8282610b9e565b5050565b61064b610b4b565b6106556000610bfa565b565b600654339073ffffffffffffffffffffffffffffffffffffffff1681146106c7576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b6106d081610bfa565b50565b6106db610b4b565b8060005b81811015610779576001600760008686858181106106ff576106ff6118b3565b9050602002016020810190610714919061169a565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061077181611911565b9150506106df565b50505050565b60606004805461051190611860565b600061079983610a28565b6105c88383610c2b565b60006107b08585856105cf565b506105e885858585610c39565b60006107c98484610594565b506105a2848484610e7c565b6000610625848484604051806020016040528060008152506107a3565b6107fa610b4b565b6006805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915561085d60055473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6108af83838360016110ae565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610779578181101561096e576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016106be565b610779848484840360006110ae565b73ffffffffffffffffffffffffffffffffffffffff83166109cd576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff8216610a1d576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b6108af8383836111f6565b3360009081526007602052604090205460ff1615610aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e6465722069732062616e6e65640000000000000000000000000000000060448201526064016106be565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090205460ff16156106d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526563697069656e742069732062616e6e65640000000000000000000000000060448201526064016106be565b6000610b3e848461078e565b506105a233858585610c39565b60055473ffffffffffffffffffffffffffffffffffffffff163314610655576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff8216610bee576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b61063f600083836111f6565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556106d0816113a1565b6000336105a281858561097d565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610ca2576040517f14b41af400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106be565b6040517f88a7ca5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388a7ca5c90610cfa903390889087908790600401611949565b6020604051808303816000875af1925050508015610d53575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d5091810190611992565b60015b610de2573d808015610d81576040519150601f19603f3d011682016040523d82523d6000602084013e610d86565b606091505b508051600003610dda576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f88a7ca5c0000000000000000000000000000000000000000000000000000000014610e75576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610ee5576040517f0778150c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106be565b6040517f7b04a2d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690637b04a2d090610f3b903390869086906004016119af565b6020604051808303816000875af1925050508015610f94575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f9191810190611992565b60015b61101b573d808015610fc2576040519150601f19603f3d011682016040523d82523d6000602084013e610fc7565b606091505b508051600003610dda576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f7b04a2d00000000000000000000000000000000000000000000000000000000014610779576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff84166110fe576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff831661114e576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106be565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610779578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111e891815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff831661122e57806002600082825461122391906119ed565b909155506112e09050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156112b4576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018390526064016106be565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff821661130957600280548290039055611335565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161139491815260200190565b60405180910390a3505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146106d057600080fd5b60006020828403121561145857600080fd5b81356105c881611418565b6000815180845260005b818110156114895760208185018101518683018201520161146d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006105c86020830184611463565b803573ffffffffffffffffffffffffffffffffffffffff811681146114fe57600080fd5b919050565b6000806040838503121561151657600080fd5b61151f836114da565b946020939093013593505050565b60008060006060848603121561154257600080fd5b61154b846114da565b9250611559602085016114da565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126115a957600080fd5b813567ffffffffffffffff808211156115c4576115c4611569565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561160a5761160a611569565b8160405283815286602085880101111561162357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561165857600080fd5b611661846114da565b925060208401359150604084013567ffffffffffffffff81111561168457600080fd5b61169086828701611598565b9150509250925092565b6000602082840312156116ac57600080fd5b6105c8826114da565b600080602083850312156116c857600080fd5b823567ffffffffffffffff808211156116e057600080fd5b818501915085601f8301126116f457600080fd5b81358181111561170357600080fd5b8660208260051b850101111561171857600080fd5b60209290920196919550909350505050565b60008060008060006080868803121561174257600080fd5b61174b866114da565b9450611759602087016114da565b935060408601359250606086013567ffffffffffffffff8082111561177d57600080fd5b818801915088601f83011261179157600080fd5b8135818111156117a057600080fd5b8960208285010111156117b257600080fd5b9699959850939650602001949392505050565b600080600080608085870312156117db57600080fd5b6117e4856114da565b93506117f2602086016114da565b925060408501359150606085013567ffffffffffffffff81111561181557600080fd5b61182187828801611598565b91505092959194509250565b6000806040838503121561184057600080fd5b611849836114da565b9150611857602084016114da565b90509250929050565b600181811c9082168061187457607f821691505b6020821081036118ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611942576119426118e2565b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526119886080830184611463565b9695505050505050565b6000602082840312156119a457600080fd5b81516105c881611418565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006119e46060830184611463565b95945050505050565b808201808211156104fc576104fc6118e256fea264697066735822122081834e57c9f405dcb828211dcaec5ae58681e18e7e631974e1f38010daa629dc64736f6c63430008140033",
    "sourceMap": "712:1869:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:213:0;;;;;;:::i;:::-;;:::i;:::-;;;611:14:23;;604:22;586:41;;574:2;559:18;814:213:0;;;;;;;;2074:89:8;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;1077:136:0:-;;;;;;:::i;:::-;;:::i;3144:97:8:-;3222:12;;3144:97;;;1956:25:23;;;1944:2;1929:18;3144:97:8;1810:177:23;5039:244:8;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2467:36:23;;2455:2;2440:18;3002:82:8;2325:184:23;2021:145:19;;;;;;:::i;:::-;;:::i;1819:196::-;;;;;;:::i;:::-;;:::i;1138:99::-;;;;;;:::i;:::-;;:::i;:::-;;3299:116:8;;;;;;:::i;:::-;3390:18;;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:5;;;:::i;1761:229:6:-;;;:::i;1382:201:19:-;;;;;;:::i;:::-;;:::i;189:228:20:-;;;;;;:::i;:::-;378:32;189:228;;;;;;;;;;;5750:66:23;5738:79;;;5720:98;;5708:2;5693:18;189:228:20;5576:248:23;1638:85:5;1710:6;;;;1638:85;;;6005:42:23;5993:55;;;5975:74;;5963:2;5948:18;1638:85:5;5829:226:23;2276:93:8;;;:::i;792:38:19:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1615:170;;;;;;:::i;:::-;;:::i;1750:281:0:-;;;;;;:::i;:::-;;:::i;2275:222::-;;;;;;:::i;:::-;;:::i;1536:164::-;;;;;;:::i;:::-;;:::i;3846:140:8:-;;;;;;:::i;:::-;3952:18;;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;874:99:6;953:13;;;;874:99;;1166:178;;;;;;:::i;:::-;;:::i;814:213:0:-;916:4;939:41;;;954:26;939:41;;:81;;-1:-1:-1;876:25:16;861:40;;;;984:36:0;932:88;814:213;-1:-1:-1;;814:213:0:o;2074:89:8:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:14;4420:31:8;735:10:14;4436:7:8;4445:5;4420:8;:31::i;:::-;-1:-1:-1;4468:4:8;;4293:186;-1:-1:-1;;;4293:186:8:o;1077:136:0:-;1153:4;1176:30;1192:2;1196:5;1176:30;;;;;;;;;;;;:15;:30::i;:::-;1169:37;1077:136;-1:-1:-1;;;1077:136:0:o;5039:244:8:-;5126:4;735:10:14;5182:37:8;5198:4;735:10:14;5213:5:8;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:8;;5039:244;-1:-1:-1;;;;5039:244:8:o;2021:145:19:-;2102:4;2125:34;2140:7;2149:5;2125:34;;;;;;;;;;;;:14;:34::i;1819:196::-;1916:4;1932:20;1949:2;1932:16;:20::i;:::-;1969:39;1991:2;1995:5;2002;1969:21;:39::i;:::-;1962:46;1819:196;-1:-1:-1;;;;1819:196:19:o;1138:99::-;1531:13:5;:11;:13::i;:::-;1211:19:19::1;1217:3;1222:7;1211:5;:19::i;:::-;1138:99:::0;;:::o;2293:101:5:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1761:229:6:-;953:13;;735:10:14;;1856:24:6;953:13;1856:24;;1852:96;;1903:34;;;;;6005:42:23;5993:55;;1903:34:6;;;5975:74:23;5948:18;;1903:34:6;;;;;;;;1852:96;1957:26;1976:6;1957:18;:26::i;:::-;1803:187;1761:229::o;1382:201:19:-;1531:13:5;:11;:13::i;:::-;1469:8:19;1457:9:::1;1494:83;1518:1;1514;:5;1494:83;;;1562:4;1540:6;:19;1547:8;;1556:1;1547:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1540:19;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1540:19:19;:26;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;1521:3;::::1;::::0;::::1;:::i;:::-;;;;1494:83;;;;1447:136;1382:201:::0;;:::o;2276:93:8:-;2323:13;2355:7;2348:14;;;;;:::i;1615:170:19:-;1700:4;1716:20;1733:2;1716:16;:20::i;:::-;1753:25;1768:2;1772:5;1753:14;:25::i;1750:281:0:-;1901:4;1917:29;1930:4;1936:2;1940:5;1917:12;:29::i;:::-;;1956:47;1981:4;1987:2;1991:5;1998:4;1956:24;:47::i;2275:222::-;2374:4;2390:23;2398:7;2407:5;2390:7;:23::i;:::-;;2423:46;2448:7;2457:5;2464:4;2423:24;:46::i;1536:164::-;1630:4;1653:40;1673:4;1679:2;1683:5;1653:40;;;;;;;;;;;;:19;:40::i;1166:178:6:-;1531:13:5;:11;:13::i;:::-;1255::6::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1319:7:::1;1710:6:5::0;;;;;1638:85;1319:7:6::1;1294:43;;;;;;;;;;;;1166:178:::0;:::o;8989:128:8:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;3952:18;;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;8119:42:23;8107:55;;10936:60:8;;;8089:74:23;8179:18;;;8172:34;;;8222:18;;;8215:34;;;8062:18;;10936:60:8;7887:368:23;10881:130:8;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;5739:18;;;5735:86;;5780:30;;;;;5807:1;5780:30;;;5975:74:23;5948:18;;5780:30:8;5829:226:23;5735:86:8;5834:16;;;5830:86;;5873:32;;;;;5902:1;5873:32;;;5975:74:23;5948:18;;5873:32:8;5829:226:23;5830:86:8;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2409:170:19:-;2487:10;2480:18;;;;:6;:18;;;;;;;;2479:19;2471:48;;;;;;;8462:2:23;2471:48:19;;;8444:21:23;8501:2;8481:18;;;8474:30;8540:18;8520;;;8513:46;8576:18;;2471:48:19;8260:340:23;2471:48:19;2538:10;;;;;;;:6;:10;;;;;;;;2537:11;2529:43;;;;;;;8807:2:23;2529:43:19;;;8789:21:23;8846:2;8826:18;;;8819:30;8885:21;8865:18;;;8858:49;8924:18;;2529:43:19;8605:343:23;1263:223:0;1358:4;1374:19;1383:2;1387:5;1374:8;:19::i;:::-;-1:-1:-1;1403:55:0;735:10:14;1442:2:0;1446:5;1453:4;1403:24;:55::i;1796:162:5:-;1710:6;;1855:23;1710:6;735:10:14;1855:23:5;1851:101;;1901:40;;;;;735:10:14;1901:40:5;;;5975:74:23;5948:18;;1901:40:5;5829:226:23;7721:208:8;7791:21;;;7787:91;;7835:32;;;;;7864:1;7835:32;;;5975:74:23;5948:18;;7835:32:8;5829:226:23;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;1528:153:6:-;1617:13;1610:20;;;;;;1640:34;1665:8;1640:24;:34::i;3610:178:8:-;3679:4;735:10:14;3733:27:8;735:10:14;3750:2:8;3754:5;3733:9;:27::i;3085:726:0:-;3201:2;:14;;;3219:1;3201:19;3197:79;;3243:22;;;;;6005:42:23;5993:55;;3243:22:0;;;5975:74:23;5948:18;;3243:22:0;5829:226:23;3197:79:0;3290:72;;;;;:39;;;;;;:72;;735:10:14;;3344:4:0;;3350:5;;3357:4;;3290:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3290:72:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3286:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:6;:13;3601:1;3584:18;3580:215;;3629:26;;;;;6005:42:23;5993:55;;3629:26:0;;;5975:74:23;5948:18;;3629:26:0;5829:226:23;3580:215:0;3755:6;3749:13;3740:6;3736:2;3732:15;3725:38;3286:519;3405:54;;;3415:44;3405:54;3401:126;;3486:26;;;;;6005:42:23;5993:55;;3486:26:0;;;5975:74:23;5948:18;;3486:26:0;5829:226:23;3401:126:0;3363:174;3085:726;;;;:::o;4305:731::-;4412:7;:19;;;4435:1;4412:24;4408:88;;4459:26;;;;;6005:42:23;5993:55;;4459:26:0;;;5975:74:23;5948:18;;4459:26:0;5829:226:23;4408:88:0;4510:70;;;;;:43;;;;;;:70;;735:10:14;;4568:5:0;;4575:4;;4510:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4510:70:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4506:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4805:6;:13;4822:1;4805:18;4801:219;;4850:30;;;;;6005:42:23;5993:55;;4850:30:0;;;5975:74:23;5948:18;;4850:30:0;5829:226:23;4506:524:0;4623:53;;;4633:43;4623:53;4619:129;;4703:30;;;;;6005:42:23;5993:55;;4703:30:0;;;5975:74:23;5948:18;;4703:30:0;5829:226:23;9949:432:8;10061:19;;;10057:89;;10103:32;;;;;10132:1;10103:32;;;5975:74:23;5948:18;;10103:32:8;5829:226:23;10057:89:8;10159:21;;;10155:90;;10203:31;;;;;10231:1;10203:31;;;5975:74:23;5948:18;;10203:31:8;5829:226:23;10155:90:8;10254:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;1956:25:23;;1944:2;1929:18;;1810:177;10333:31:8;;;;;;;;9949:432;;;;:::o;6271:1107::-;6360:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;6570:15;;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;;;;8119:42:23;8107:55;;6649:50:8;;;8089:74:23;8179:18;;;8172:34;;;8222:18;;;8215:34;;;8062:18;;6649:50:8;7887:368:23;6599:115:8;6834:15;;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;6910:16;;;6906:425;;7073:12;:21;;;;;;;6906:425;;;7284:13;;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;1956::23;;1944:2;1929:18;;1810:177;7346:25:8;;;;;;;;6271:1107;;;:::o;2912:187:5:-;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:23:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:482::-;680:3;718:5;712:12;745:6;740:3;733:19;770:1;780:162;794:6;791:1;788:13;780:162;;;856:4;912:13;;;908:22;;902:29;884:11;;;880:20;;873:59;809:12;780:162;;;784:3;987:1;980:4;971:6;966:3;962:16;958:27;951:38;1109:4;1039:66;1034:2;1026:6;1022:15;1018:88;1013:3;1009:98;1005:109;998:116;;;638:482;;;;:::o;1125:220::-;1274:2;1263:9;1256:21;1237:4;1294:45;1335:2;1324:9;1320:18;1312:6;1294:45;:::i;1350:196::-;1418:20;;1478:42;1467:54;;1457:65;;1447:93;;1536:1;1533;1526:12;1447:93;1350:196;;;:::o;1551:254::-;1619:6;1627;1680:2;1668:9;1659:7;1655:23;1651:32;1648:52;;;1696:1;1693;1686:12;1648:52;1719:29;1738:9;1719:29;:::i;:::-;1709:39;1795:2;1780:18;;;;1767:32;;-1:-1:-1;;;1551:254:23:o;1992:328::-;2069:6;2077;2085;2138:2;2126:9;2117:7;2113:23;2109:32;2106:52;;;2154:1;2151;2144:12;2106:52;2177:29;2196:9;2177:29;:::i;:::-;2167:39;;2225:38;2259:2;2248:9;2244:18;2225:38;:::i;:::-;2215:48;;2310:2;2299:9;2295:18;2282:32;2272:42;;1992:328;;;;;:::o;2514:184::-;2566:77;2563:1;2556:88;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:777;2745:5;2798:3;2791:4;2783:6;2779:17;2775:27;2765:55;;2816:1;2813;2806:12;2765:55;2852:6;2839:20;2878:18;2915:2;2911;2908:10;2905:36;;;2921:18;;:::i;:::-;3055:2;3049:9;3117:4;3109:13;;2960:66;3105:22;;;3129:2;3101:31;3097:40;3085:53;;;3153:18;;;3173:22;;;3150:46;3147:72;;;3199:18;;:::i;:::-;3239:10;3235:2;3228:22;3274:2;3266:6;3259:18;3320:3;3313:4;3308:2;3300:6;3296:15;3292:26;3289:35;3286:55;;;3337:1;3334;3327:12;3286:55;3401:2;3394:4;3386:6;3382:17;3375:4;3367:6;3363:17;3350:54;3448:1;3441:4;3436:2;3428:6;3424:15;3420:26;3413:37;3468:6;3459:15;;;;;;2703:777;;;;:::o;3485:462::-;3571:6;3579;3587;3640:2;3628:9;3619:7;3615:23;3611:32;3608:52;;;3656:1;3653;3646:12;3608:52;3679:29;3698:9;3679:29;:::i;:::-;3669:39;;3755:2;3744:9;3740:18;3727:32;3717:42;;3810:2;3799:9;3795:18;3782:32;3837:18;3829:6;3826:30;3823:50;;;3869:1;3866;3859:12;3823:50;3892:49;3933:7;3924:6;3913:9;3909:22;3892:49;:::i;:::-;3882:59;;;3485:462;;;;;:::o;3952:186::-;4011:6;4064:2;4052:9;4043:7;4039:23;4035:32;4032:52;;;4080:1;4077;4070:12;4032:52;4103:29;4122:9;4103:29;:::i;4143:615::-;4229:6;4237;4290:2;4278:9;4269:7;4265:23;4261:32;4258:52;;;4306:1;4303;4296:12;4258:52;4346:9;4333:23;4375:18;4416:2;4408:6;4405:14;4402:34;;;4432:1;4429;4422:12;4402:34;4470:6;4459:9;4455:22;4445:32;;4515:7;4508:4;4504:2;4500:13;4496:27;4486:55;;4537:1;4534;4527:12;4486:55;4577:2;4564:16;4603:2;4595:6;4592:14;4589:34;;;4619:1;4616;4609:12;4589:34;4672:7;4667:2;4657:6;4654:1;4650:14;4646:2;4642:23;4638:32;4635:45;4632:65;;;4693:1;4690;4683:12;4632:65;4724:2;4716:11;;;;;4746:6;;-1:-1:-1;4143:615:23;;-1:-1:-1;;;;4143:615:23:o;4763:808::-;4860:6;4868;4876;4884;4892;4945:3;4933:9;4924:7;4920:23;4916:33;4913:53;;;4962:1;4959;4952:12;4913:53;4985:29;5004:9;4985:29;:::i;:::-;4975:39;;5033:38;5067:2;5056:9;5052:18;5033:38;:::i;:::-;5023:48;;5118:2;5107:9;5103:18;5090:32;5080:42;;5173:2;5162:9;5158:18;5145:32;5196:18;5237:2;5229:6;5226:14;5223:34;;;5253:1;5250;5243:12;5223:34;5291:6;5280:9;5276:22;5266:32;;5336:7;5329:4;5325:2;5321:13;5317:27;5307:55;;5358:1;5355;5348:12;5307:55;5398:2;5385:16;5424:2;5416:6;5413:14;5410:34;;;5440:1;5437;5430:12;5410:34;5485:7;5480:2;5471:6;5467:2;5463:15;5459:24;5456:37;5453:57;;;5506:1;5503;5496:12;5453:57;4763:808;;;;-1:-1:-1;4763:808:23;;-1:-1:-1;5537:2:23;5529:11;;5559:6;4763:808;-1:-1:-1;;;4763:808:23:o;6060:537::-;6155:6;6163;6171;6179;6232:3;6220:9;6211:7;6207:23;6203:33;6200:53;;;6249:1;6246;6239:12;6200:53;6272:29;6291:9;6272:29;:::i;:::-;6262:39;;6320:38;6354:2;6343:9;6339:18;6320:38;:::i;:::-;6310:48;;6405:2;6394:9;6390:18;6377:32;6367:42;;6460:2;6449:9;6445:18;6432:32;6487:18;6479:6;6476:30;6473:50;;;6519:1;6516;6509:12;6473:50;6542:49;6583:7;6574:6;6563:9;6559:22;6542:49;:::i;:::-;6532:59;;;6060:537;;;;;;;:::o;6602:260::-;6670:6;6678;6731:2;6719:9;6710:7;6706:23;6702:32;6699:52;;;6747:1;6744;6737:12;6699:52;6770:29;6789:9;6770:29;:::i;:::-;6760:39;;6818:38;6852:2;6841:9;6837:18;6818:38;:::i;:::-;6808:48;;6602:260;;;;;:::o;6867:437::-;6946:1;6942:12;;;;6989;;;7010:61;;7064:4;7056:6;7052:17;7042:27;;7010:61;7117:2;7109:6;7106:14;7086:18;7083:38;7080:218;;7154:77;7151:1;7144:88;7255:4;7252:1;7245:15;7283:4;7280:1;7273:15;7080:218;;6867:437;;;:::o;7309:184::-;7361:77;7358:1;7351:88;7458:4;7455:1;7448:15;7482:4;7479:1;7472:15;7498:184;7550:77;7547:1;7540:88;7647:4;7644:1;7637:15;7671:4;7668:1;7661:15;7687:195;7726:3;7757:66;7750:5;7747:77;7744:103;;7827:18;;:::i;:::-;-1:-1:-1;7874:1:23;7863:13;;7687:195::o;8953:512::-;9147:4;9176:42;9257:2;9249:6;9245:15;9234:9;9227:34;9309:2;9301:6;9297:15;9292:2;9281:9;9277:18;9270:43;;9349:6;9344:2;9333:9;9329:18;9322:34;9392:3;9387:2;9376:9;9372:18;9365:31;9413:46;9454:3;9443:9;9439:19;9431:6;9413:46;:::i;:::-;9405:54;8953:512;-1:-1:-1;;;;;;8953:512:23:o;9470:249::-;9539:6;9592:2;9580:9;9571:7;9567:23;9563:32;9560:52;;;9608:1;9605;9598:12;9560:52;9640:9;9634:16;9659:30;9683:5;9659:30;:::i;9724:409::-;9939:42;9931:6;9927:55;9916:9;9909:74;10019:6;10014:2;10003:9;9999:18;9992:34;10062:2;10057;10046:9;10042:18;10035:30;9890:4;10082:45;10123:2;10112:9;10108:18;10100:6;10082:45;:::i;:::-;10074:53;9724:409;-1:-1:-1;;;;;9724:409:23:o;10138:125::-;10203:9;;;10224:10;;;10221:36;;;10237:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approveAndCall(address,uint256)": "3177029f",
    "approveAndCall(address,uint256,bytes)": "cae9ca51",
    "balanceOf(address)": "70a08231",
    "banUser(address[])": "7f205499",
    "banned(address)": "9c8d83bb",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "onTransferReceived(address,address,uint256,bytes)": "88a7ca5c",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAndCall(address,uint256)": "1296ee62",
    "transferAndCall(address,uint256,bytes)": "4000aea0",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferFromAndCall(address,address,uint256)": "d8fbe994",
    "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"intialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363EOAReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363EOASpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"name\":\"banUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"banned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mehdi Rhouzlane\",\"details\":\"This token inherites from ERC1363 and Ownable2Step and integrates a mock ERC1363 receiver.\",\"errors\":{\"ERC1363EOAReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver` as it can't be an EOA. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363EOASpender(address)\":[{\"details\":\"Indicates a failure with the token `spender` as it can't be an EOA. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"banUser(address[])\":{\"details\":\"reverts if the sender is not the owner\",\"params\":{\"_address\":\"The addresses to ban\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"reverts if the sender is not the owner\",\"params\":{\"_to\":\"The address to mint to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which are tokens transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"title\":\"TokenWithSanctions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"banUser(address[])\":{\"notice\":\"Bans the specified addresses\"},\"mint(address,uint256)\":{\"notice\":\"Mints the specified amount of tokens to the specified address\"}},\"notice\":\"Fungible token that allows an admin to ban specified addresses from sending and receiving tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenWithSanctions.sol\":\"TokenWithSanctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/math/=lib/prb-math/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\"lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/\"]},\"sources\":{\"lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol\":{\"keccak256\":\"0x593f3571adaba84a15403e2fb7b403a655dda727849246fb6a543401f202f95b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c7b55df1d2e18cbf40501a5c74bc8d61136e116557647479656d6cedb48436\",\"dweb:/ipfs/QmSgBiPcFNxs1uukTbdV5jN6uaMQ9YCDL95CZGqz5xH6D5\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol\":{\"keccak256\":\"0xfe5fd5a1cb0239e00808c2170e7d48b27fc0465821fce28d02a0e9211ee8a00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8711efe0555e3542fc977fab5d5cf076799f42adefde990190372b03a36e059\",\"dweb:/ipfs/QmPQx8RN2zNnuKp9VgEBo4qvrbXMr2Rv5yGZsiCxZtvr8C\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Errors.sol\":{\"keccak256\":\"0x89ae183ae6db6e5a4d8e6ef42daae88745b626af99e63aa900e934fb19a629bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e5dc1334f866c55e61bf64b3fdfae40076e3e0f8f0a5dd3e666310dec70ce4\",\"dweb:/ipfs/QmezuskExcDYptsyAMKxtyUtq6Xb8FBnFCTNu3fwa5zReZ\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0x3f836d0846d5f46f3d9154342833d28ea04ab48007f8b29631fcd9fd47b3a846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96f26b167a755f248556c71fd0ff4e6efb3b96971f5cb72a5515fd192c8c3e6e\",\"dweb:/ipfs/QmPkH4jrgR4fs5DxAoQVesAMz1MjZK9yNPtm38XBQCaz2S\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0x8391ca93a7573968d18570667170f961ab104b0ab0d1f99359a22a6c63ea4c6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d38143b2a6155c0667b4f8520db7d2ef81fc6f9465c9733211c65bd128576d7b\",\"dweb:/ipfs/QmexBf1LecbszwtooXvx5HNe2nNeDxh8H5usjwYf2AmtoX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/TokenWithSanctions.sol\":{\"keccak256\":\"0x848050e6b2d43e13d072591901860b28400db70f4161d0a4deda252fd8d9842a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://205a7cc4a3a240f27de12367064f5a45933ec2bb4701a842284d45260a31bbf8\",\"dweb:/ipfs/QmfTy8FKxwzxHYuRwviM6TEEy59qqCGZz6RTr32bbYs2tz\"]},\"src/mocks/MockReceiver.sol\":{\"keccak256\":\"0xb2dfbb4d7ef89082cdc955f65ff87978eb06fa2e11877c2936a2214e973feab6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://68c7bfdc470df584a41c62924e48c198f99b3690c2fa79b41a35b1fc944d0f08\",\"dweb:/ipfs/QmT1k2w6WihvN3RRNukekmVBzqMY1ikr4mbQBX3XFearrV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "intialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363EOAReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363EOASpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_address",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "banUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "banned",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onTransferReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "approveAndCall(address,uint256)": {
            "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.",
            "params": {
              "spender": "The address which will spend the funds.",
              "value": "The amount of tokens to be spent."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "approveAndCall(address,uint256,bytes)": {
            "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `spender`.",
              "spender": "The address which will spend the funds.",
              "value": "The amount of tokens to be spent."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "banUser(address[])": {
            "details": "reverts if the sender is not the owner",
            "params": {
              "_address": "The addresses to ban"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "mint(address,uint256)": {
            "details": "reverts if the sender is not the owner",
            "params": {
              "_to": "The address to mint to"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "onTransferReceived(address,address,uint256,bytes)": {
            "details": "Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` (i.e. 0x88a7ca5c, or its own function selector).",
            "params": {
              "data": "Additional data with no specified format.",
              "from": "The address which are tokens transferred from.",
              "operator": "The address which called `transferAndCall` or `transferFromAndCall` function.",
              "value": "The amount of tokens transferred."
            },
            "returns": {
              "_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferAndCall(address,uint256)": {
            "details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.",
            "params": {
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferAndCall(address,uint256,bytes)": {
            "details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `to`.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferFromAndCall(address,address,uint256)": {
            "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.",
            "params": {
              "from": "The address which you want to send tokens from.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferFromAndCall(address,address,uint256,bytes)": {
            "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `to`.",
              "from": "The address which you want to send tokens from.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "banUser(address[])": {
            "notice": "Bans the specified addresses"
          },
          "mint(address,uint256)": {
            "notice": "Mints the specified amount of tokens to the specified address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/math/=lib/prb-math/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc1363-payable-token/=lib/erc1363-payable-token/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/TokenWithSanctions.sol": "TokenWithSanctions"
      },
      "libraries": {}
    },
    "sources": {
      "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol": {
        "keccak256": "0x593f3571adaba84a15403e2fb7b403a655dda727849246fb6a543401f202f95b",
        "urls": [
          "bzz-raw://58c7b55df1d2e18cbf40501a5c74bc8d61136e116557647479656d6cedb48436",
          "dweb:/ipfs/QmSgBiPcFNxs1uukTbdV5jN6uaMQ9YCDL95CZGqz5xH6D5"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol": {
        "keccak256": "0xfe5fd5a1cb0239e00808c2170e7d48b27fc0465821fce28d02a0e9211ee8a00c",
        "urls": [
          "bzz-raw://c8711efe0555e3542fc977fab5d5cf076799f42adefde990190372b03a36e059",
          "dweb:/ipfs/QmPQx8RN2zNnuKp9VgEBo4qvrbXMr2Rv5yGZsiCxZtvr8C"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Errors.sol": {
        "keccak256": "0x89ae183ae6db6e5a4d8e6ef42daae88745b626af99e63aa900e934fb19a629bd",
        "urls": [
          "bzz-raw://c9e5dc1334f866c55e61bf64b3fdfae40076e3e0f8f0a5dd3e666310dec70ce4",
          "dweb:/ipfs/QmezuskExcDYptsyAMKxtyUtq6Xb8FBnFCTNu3fwa5zReZ"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol": {
        "keccak256": "0x3f836d0846d5f46f3d9154342833d28ea04ab48007f8b29631fcd9fd47b3a846",
        "urls": [
          "bzz-raw://96f26b167a755f248556c71fd0ff4e6efb3b96971f5cb72a5515fd192c8c3e6e",
          "dweb:/ipfs/QmPkH4jrgR4fs5DxAoQVesAMz1MjZK9yNPtm38XBQCaz2S"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol": {
        "keccak256": "0x8391ca93a7573968d18570667170f961ab104b0ab0d1f99359a22a6c63ea4c6f",
        "urls": [
          "bzz-raw://d38143b2a6155c0667b4f8520db7d2ef81fc6f9465c9733211c65bd128576d7b",
          "dweb:/ipfs/QmexBf1LecbszwtooXvx5HNe2nNeDxh8H5usjwYf2AmtoX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "src/TokenWithSanctions.sol": {
        "keccak256": "0x848050e6b2d43e13d072591901860b28400db70f4161d0a4deda252fd8d9842a",
        "urls": [
          "bzz-raw://205a7cc4a3a240f27de12367064f5a45933ec2bb4701a842284d45260a31bbf8",
          "dweb:/ipfs/QmfTy8FKxwzxHYuRwviM6TEEy59qqCGZz6RTr32bbYs2tz"
        ],
        "license": "UNLICENSED"
      },
      "src/mocks/MockReceiver.sol": {
        "keccak256": "0xb2dfbb4d7ef89082cdc955f65ff87978eb06fa2e11877c2936a2214e973feab6",
        "urls": [
          "bzz-raw://68c7bfdc470df584a41c62924e48c198f99b3690c2fa79b41a35b1fc944d0f08",
          "dweb:/ipfs/QmT1k2w6WihvN3RRNukekmVBzqMY1ikr4mbQBX3XFearrV"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/TokenWithSanctions.sol",
    "id": 2627,
    "exportedSymbols": {
      "ERC1363": [
        319
      ],
      "ERC165": [
        2143
      ],
      "ERC20": [
        1345
      ],
      "IERC1363": [
        401
      ],
      "IERC1363Errors": [
        425
      ],
      "IERC1363Receiver": [
        443
      ],
      "IERC1363Spender": [
        459
      ],
      "IERC165": [
        2155
      ],
      "IERC20": [
        1423
      ],
      "MockERC1363Receiver": [
        2651
      ],
      "Ownable": [
        607
      ],
      "Ownable2Step": [
        693
      ],
      "TokenWithSanctions": [
        2626
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2543:19",
    "nodes": [
      {
        "id": 2446,
        "nodeType": "PragmaDirective",
        "src": "39:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 2448,
        "nodeType": "ImportDirective",
        "src": "65:77:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2627,
        "sourceUnit": 694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2447,
              "name": "Ownable2Step",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 693,
              "src": "73:12:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2450,
        "nodeType": "ImportDirective",
        "src": "143:67:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2627,
        "sourceUnit": 608,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2449,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 607,
              "src": "151:7:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2452,
        "nodeType": "ImportDirective",
        "src": "211:61:19",
        "nodes": [],
        "absolutePath": "src/mocks/MockReceiver.sol",
        "file": "./mocks/MockReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2627,
        "sourceUnit": 2652,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2451,
              "name": "MockERC1363Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2651,
              "src": "219:19:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2453,
        "nodeType": "ImportDirective",
        "src": "273:67:19",
        "nodes": [],
        "absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2627,
        "sourceUnit": 320,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2455,
        "nodeType": "ImportDirective",
        "src": "341:70:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2627,
        "sourceUnit": 1424,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2454,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1423,
              "src": "349:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2626,
        "nodeType": "ContractDefinition",
        "src": "712:1869:19",
        "nodes": [
          {
            "id": 2466,
            "nodeType": "VariableDeclaration",
            "src": "792:38:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c8d83bb",
            "mutability": "mutable",
            "name": "banned",
            "nameLocation": "824:6:19",
            "scope": 2626,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2465,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2463,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "800:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "792:24:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2464,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "811:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2484,
            "nodeType": "FunctionDefinition",
            "src": "837:126:19",
            "nodes": [],
            "body": {
              "id": 2483,
              "nodeType": "Block",
              "src": "918:45:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2479,
                        "name": "intialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2468,
                        "src": "934:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 2480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "947:8:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 2478,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "928:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2482,
                  "nodeType": "ExpressionStatement",
                  "src": "928:28:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "52534b",
                    "id": 2471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "876:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_80553b6b348ae45ab8e8bf75e77064818c0a772f13cf8d3a175d3815aec59b56",
                      "typeString": "literal_string \"RSK\""
                    },
                    "value": "RSK"
                  },
                  {
                    "hexValue": "52617265536b696c6c73",
                    "id": 2472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "883:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6373a69c52f8f41995c622e1436da46f2fb06893c42e72f8f004647795058922",
                      "typeString": "literal_string \"RareSkills\""
                    },
                    "value": "RareSkills"
                  }
                ],
                "id": 2473,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2470,
                  "name": "ERC20",
                  "nameLocations": [
                    "870:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1345,
                  "src": "870:5:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:26:19"
              },
              {
                "arguments": [
                  {
                    "id": 2475,
                    "name": "intialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2468,
                    "src": "905:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2476,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2474,
                  "name": "Ownable",
                  "nameLocations": [
                    "897:7:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 607,
                  "src": "897:7:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "897:20:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2468,
                  "mutability": "mutable",
                  "name": "intialOwner",
                  "nameLocation": "857:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "849:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "848:21:19"
            },
            "returnParameters": {
              "id": 2477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2500,
            "nodeType": "FunctionDefinition",
            "src": "1138:99:19",
            "nodes": [],
            "body": {
              "id": 2499,
              "nodeType": "Block",
              "src": "1201:36:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2495,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "1217:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2496,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2489,
                        "src": "1222:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2494,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "1211:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:19:19"
                }
              ]
            },
            "documentation": {
              "id": 2485,
              "nodeType": "StructuredDocumentation",
              "src": "969:164:19",
              "text": "@notice Mints the specified amount of tokens to the specified address\n@dev reverts if the sender is not the owner\n@param _to The address to mint to"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2491,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1191:9:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "1191:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1191:9:19"
              }
            ],
            "name": "mint",
            "nameLocation": "1147:4:19",
            "parameters": {
              "id": 2490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1160:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "1152:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2489,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1173:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2500,
                  "src": "1165:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:30:19"
            },
            "returnParameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:0:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2535,
            "nodeType": "FunctionDefinition",
            "src": "1382:201:19",
            "nodes": [],
            "body": {
              "id": 2534,
              "nodeType": "Block",
              "src": "1447:136:19",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2510,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "1465:1:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2534,
                      "src": "1457:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1457:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2513,
                  "initialValue": {
                    "expression": {
                      "id": 2511,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2504,
                      "src": "1469:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1478:6:19",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1469:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1457:27:19"
                },
                {
                  "body": {
                    "id": 2532,
                    "nodeType": "Block",
                    "src": "1526:51:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2524,
                              "name": "banned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2466,
                              "src": "1540:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2528,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2525,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2504,
                                "src": "1547:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2527,
                              "indexExpression": {
                                "id": 2526,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2515,
                                "src": "1556:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1547:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1540:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1562:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1540:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2531,
                        "nodeType": "ExpressionStatement",
                        "src": "1540:26:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2518,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2515,
                      "src": "1514:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2519,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2510,
                      "src": "1518:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1514:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2533,
                  "initializationExpression": {
                    "assignments": [
                      2515
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2515,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1507:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2533,
                        "src": "1499:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2514,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2517,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1499:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1521:3:19",
                      "subExpression": {
                        "id": 2521,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2515,
                        "src": "1521:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2523,
                    "nodeType": "ExpressionStatement",
                    "src": "1521:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "1494:83:19"
                }
              ]
            },
            "documentation": {
              "id": 2501,
              "nodeType": "StructuredDocumentation",
              "src": "1243:134:19",
              "text": "@notice Bans the specified addresses\n@dev reverts if the sender is not the owner\n@param _address The addresses to ban"
            },
            "functionSelector": "7f205499",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2507,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2506,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1437:9:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "1437:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1437:9:19"
              }
            ],
            "name": "banUser",
            "nameLocation": "1391:7:19",
            "parameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2504,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1418:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "1399:27:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2502,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1399:7:19",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2503,
                    "nodeType": "ArrayTypeName",
                    "src": "1399:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:29:19"
            },
            "returnParameters": {
              "id": 2508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:0:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2559,
            "nodeType": "FunctionDefinition",
            "src": "1615:170:19",
            "nodes": [],
            "body": {
              "id": 2558,
              "nodeType": "Block",
              "src": "1706:79:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2549,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "1733:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2548,
                      "name": "checkBlacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "1716:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2551,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:20:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2554,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "1768:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2555,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "1772:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2552,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1753:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenWithSanctions_$2626_$",
                          "typeString": "type(contract super TokenWithSanctions)"
                        }
                      },
                      "id": 2553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1759:8:19",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 955,
                      "src": "1753:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2547,
                  "id": 2557,
                  "nodeType": "Return",
                  "src": "1746:32:19"
                }
              ]
            },
            "baseFunctions": [
              955,
              1390
            ],
            "documentation": {
              "id": 2536,
              "nodeType": "StructuredDocumentation",
              "src": "1589:21:19",
              "text": "@inheritdoc ERC20"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1624:8:19",
            "overrides": {
              "id": 2544,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2542,
                  "name": "ERC20",
                  "nameLocations": [
                    "1676:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1345,
                  "src": "1676:5:19"
                },
                {
                  "id": 2543,
                  "name": "IERC20",
                  "nameLocations": [
                    "1683:6:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1423,
                  "src": "1683:6:19"
                }
              ],
              "src": "1667:23:19"
            },
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1641:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "1633:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2540,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1653:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "1645:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:27:19"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "1700:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1699:6:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2584,
            "nodeType": "FunctionDefinition",
            "src": "1819:196:19",
            "nodes": [],
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "1922:93:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2573,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "1949:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2572,
                      "name": "checkBlacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "1932:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:20:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2575,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:20:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2578,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "1991:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2579,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "1995:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2580,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "2002:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2576,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1969:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenWithSanctions_$2626_$",
                          "typeString": "type(contract super TokenWithSanctions)"
                        }
                      },
                      "id": 2577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1975:15:19",
                      "memberName": "transferAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "1969:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2571,
                  "id": 2582,
                  "nodeType": "Return",
                  "src": "1962:46:19"
                }
              ]
            },
            "baseFunctions": [
              92
            ],
            "documentation": {
              "id": 2560,
              "nodeType": "StructuredDocumentation",
              "src": "1791:23:19",
              "text": "@inheritdoc ERC1363"
            },
            "functionSelector": "4000aea0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "1828:15:19",
            "overrides": {
              "id": 2568,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1898:8:19"
            },
            "parameters": {
              "id": 2567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1852:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "1844:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1864:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "1856:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2566,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1884:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "1871:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2565,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1843:47:19"
            },
            "returnParameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "1916:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:6:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2601,
            "nodeType": "FunctionDefinition",
            "src": "2021:145:19",
            "nodes": [],
            "body": {
              "id": 2600,
              "nodeType": "Block",
              "src": "2108:58:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2595,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "2140:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2596,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2588,
                        "src": "2149:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2594,
                      "name": "approveAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2601,
                        185
                      ],
                      "referencedDeclaration": 185,
                      "src": "2125:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2593,
                  "id": 2599,
                  "nodeType": "Return",
                  "src": "2118:41:19"
                }
              ]
            },
            "baseFunctions": [
              159
            ],
            "functionSelector": "3177029f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nameLocation": "2030:14:19",
            "overrides": {
              "id": 2590,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2084:8:19"
            },
            "parameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2053:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2601,
                  "src": "2045:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2588,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2070:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2601,
                  "src": "2062:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2044:32:19"
            },
            "returnParameters": {
              "id": 2593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2601,
                  "src": "2102:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:6:19"
            },
            "scope": 2626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2625,
            "nodeType": "FunctionDefinition",
            "src": "2409:170:19",
            "nodes": [],
            "body": {
              "id": 2624,
              "nodeType": "Block",
              "src": "2461:118:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2479:19:19",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2608,
                            "name": "banned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2466,
                            "src": "2480:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2611,
                          "indexExpression": {
                            "expression": {
                              "id": 2609,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2487:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2491:6:19",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2487:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2480:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722069732062616e6e6564",
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2500:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        },
                        "value": "Sender is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        }
                      ],
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2471:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:48:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2537:11:19",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2617,
                            "name": "banned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2466,
                            "src": "2538:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2619,
                          "indexExpression": {
                            "id": 2618,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "2545:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2538:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563697069656e742069732062616e6e6564",
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2550:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        },
                        "value": "Recipient is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        }
                      ],
                      "id": 2616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2529:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2529:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2623,
                  "nodeType": "ExpressionStatement",
                  "src": "2529:43:19"
                }
              ]
            },
            "documentation": {
              "id": 2602,
              "nodeType": "StructuredDocumentation",
              "src": "2172:232:19",
              "text": "@notice Checks if the sender and the recipient are banned\n @dev reverts if the sender is banned\n @dev reverts if the recipient is banned\n @dev msg.sender is the sender\n @param to The recipient address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBlacklisted",
            "nameLocation": "2418:16:19",
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2443:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "2435:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2434:12:19"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2461:0:19"
            },
            "scope": 2626,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2457,
              "name": "ERC1363",
              "nameLocations": [
                "743:7:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 319,
              "src": "743:7:19"
            },
            "id": 2458,
            "nodeType": "InheritanceSpecifier",
            "src": "743:7:19"
          },
          {
            "baseName": {
              "id": 2459,
              "name": "Ownable2Step",
              "nameLocations": [
                "752:12:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 693,
              "src": "752:12:19"
            },
            "id": 2460,
            "nodeType": "InheritanceSpecifier",
            "src": "752:12:19"
          },
          {
            "baseName": {
              "id": 2461,
              "name": "MockERC1363Receiver",
              "nameLocations": [
                "766:19:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2651,
              "src": "766:19:19"
            },
            "id": 2462,
            "nodeType": "InheritanceSpecifier",
            "src": "766:19:19"
          }
        ],
        "canonicalName": "TokenWithSanctions",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2456,
          "nodeType": "StructuredDocumentation",
          "src": "413:268:19",
          "text": "@title TokenWithSanctions\n @author Mehdi Rhouzlane\n @notice Fungible token that allows an admin to ban specified addresses from sending and receiving tokens.\n @dev This token inherites from ERC1363 and Ownable2Step and integrates a mock ERC1363 receiver."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2626,
          2651,
          443,
          693,
          607,
          319,
          425,
          401,
          2143,
          2155,
          1345,
          735,
          1449,
          1423,
          2050
        ],
        "name": "TokenWithSanctions",
        "nameLocation": "721:18:19",
        "scope": 2627,
        "usedErrors": [
          409,
          414,
          419,
          424,
          473,
          478,
          705,
          710,
          715,
          724,
          729,
          734
        ],
        "usedEvents": [
          484,
          622,
          1357,
          1366
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}