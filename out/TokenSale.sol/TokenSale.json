{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        }
      ],
      "name": "InsufficientPayment",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceReceived",
          "type": "uint256"
        }
      ],
      "name": "TokenBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePaid",
          "type": "uint256"
        }
      ],
      "name": "TokenSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PRICE_INCREMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "START_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_qty",
          "type": "uint256"
        }
      ],
      "name": "buyBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_qty",
          "type": "uint256"
        }
      ],
      "name": "buyToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculatePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reserveRatio",
          "type": "uint256"
        }
      ],
      "name": "setReserveRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526207a1206009553480156200001857600080fd5b50604051620019bc380380620019bc8339810160408190526200003b91620001db565b8181846001600160a01b0381166200006d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007881620000a8565b506005620000878382620002f4565b506006620000968282620002f4565b5050600160075550620003c092505050565b600180546001600160a01b0319169055620000c381620000c6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b600093810190920192909252949350505050565b600080600060608486031215620001f157600080fd5b83516001600160a01b03811681146200020957600080fd5b60208501519093506001600160401b03808211156200022757600080fd5b62000235878388016200012c565b935060408601519150808211156200024c57600080fd5b506200025b868287016200012c565b9150509250925092565b600181811c908216806200027a57607f821691505b6020821081036200029b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ef57600081815260208120601f850160051c81016020861015620002ca5750805b601f850160051c820191505b81811015620002eb57828155600101620002d6565b5050505b505050565b81516001600160401b0381111562000310576200031062000116565b620003288162000321845462000265565b84620002a1565b602080601f831160018114620003605760008415620003475750858301515b600019600386901b1c1916600185901b178555620002eb565b600085815260208120601f198616915b82811015620003915788860151825594840194600190910190840162000370565b5085821015620003b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6115ec80620003d06000396000f3fe60806040526004361061018b5760003560e01c806370a08231116100d6578063a10954fe1161007f578063dd62ed3e11610059578063dd62ed3e14610445578063e30c397814610498578063f2fde38b146104c357600080fd5b8063a10954fe146103fa578063a9059cbb14610410578063d348b4091461043057600080fd5b80638b4f3b2c116100b05780638b4f3b2c146103795780638da5cb5b1461039957806395d89b41146103e557600080fd5b806370a082311461030c578063715018a61461034f57806379ba50971461036457600080fd5b80632d296bf11161013857806340c10f191161011257806340c10f19146102b057806351cff8d9146102d05780636d25d802146102f057600080fd5b80632d296bf114610265578063313ce567146102785780633609ac8f1461029457600080fd5b80630c7d5cd8116101695780630c7d5cd81461020d57806318160ddd1461023157806323b872dd1461024557600080fd5b8063053f90401461019057806306fdde03146101b2578063095ea7b3146101dd575b600080fd5b34801561019c57600080fd5b506101b06101ab366004611353565b6104e3565b005b3480156101be57600080fd5b506101c7610694565b6040516101d49190611390565b60405180910390f35b3480156101e957600080fd5b506101fd6101f8366004611405565b610726565b60405190151581526020016101d4565b34801561021957600080fd5b5061022360095481565b6040519081526020016101d4565b34801561023d57600080fd5b506000610223565b34801561025157600080fd5b506101fd61026036600461142f565b610740565b6101b0610273366004611353565b610766565b34801561028457600080fd5b50604051601281526020016101d4565b3480156102a057600080fd5b50610223670de0b6b3a764000081565b3480156102bc57600080fd5b506101b06102cb366004611405565b61088a565b3480156102dc57600080fd5b506101fd6102eb36600461146b565b61089c565b3480156102fc57600080fd5b5061022367016345785d8a000081565b34801561031857600080fd5b5061022361032736600461146b565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b34801561035b57600080fd5b506101b06108cd565b34801561037057600080fd5b506101b06108e1565b34801561038557600080fd5b506101b0610394366004611353565b610955565b3480156103a557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d4565b3480156103f157600080fd5b506101c7610962565b34801561040657600080fd5b5061022360085481565b34801561041c57600080fd5b506101fd61042b366004611405565b610971565b34801561043c57600080fd5b5061022361097f565b34801561045157600080fd5b50610223610460366004611486565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291909152205490565b3480156104a457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166103c0565b3480156104cf57600080fd5b506101b06104de36600461146b565b6109aa565b6104eb610a5a565b33600090815260026020526040902054811115610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420656e6f75676820746f6b656e7300000000000000000000000000000060448201526064015b60405180910390fd5b60008161057461097f565b61057e91906114e8565b9050806008541015610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4e6f7420656e6f75676820726573657276652062616c616e636520746f20627560448201527f79206261636b00000000000000000000000000000000000000000000000000006064820152608401610560565b336000908152600a6020526040812080548492906106319084906114ff565b9091555061064190503383610a9d565b806008600082825461065391906114ff565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610685573d6000803e3d6000fd5b50506106916001600755565b50565b6060600580546106a390611512565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90611512565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050505050905090565b600033610734818585610af9565b60019150505b92915050565b60003361074e858285610b06565b610759858585610bd5565b60019150505b9392505050565b60008161077161097f565b61077b91906114e8565b9050803410156107c0576040517fb99e2ab700000000000000000000000000000000000000000000000000000000815234600482015260248101829052604401610560565b6107ca3383610c80565b80600860008282546107dc9190611565565b9091555050336000908152600a602052604081208054849290610800908490611565565b909155505060408051338152602081018490529081018290527f35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e9060600160405180910390a18034111561088657336108fc61085c83346114ff565b6040518115909202916000818181858888f19350505050158015610884573d6000803e3d6000fd5b505b5050565b610892610cdc565b6108868282610c80565b60006108a6610cdc565b306000818152600260205260409020546108c4919081908590610d2f565b5060015b919050565b6108d5610cdc565b6108df6000610dc4565b565b600154339073ffffffffffffffffffffffffffffffffffffffff16811461094c576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610560565b61069181610dc4565b61095d610cdc565b600955565b6060600680546106a390611512565b600033610734818585610bd5565b600061099367016345785d8a0000826114e8565b6109a590670de0b6b3a7640000611565565b905090565b6109b2610cdc565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610a1560005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600260075403610a96576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600755565b73ffffffffffffffffffffffffffffffffffffffff8216610aed576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b61088682600083610df5565b6108848383836001610fa0565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600360209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bcf5781811015610bc0576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024810182905260448101839052606401610560565b610bcf84848484036000610fa0565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c25576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff8216610c75576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b610884838383610df5565b73ffffffffffffffffffffffffffffffffffffffff8216610cd0576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b61088660008383610df5565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108df576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610560565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610bcf9085906110e8565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556106918161117e565b73ffffffffffffffffffffffffffffffffffffffff8316610e2d578060046000828254610e229190611565565b90915550610edf9050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090205481811015610eb3576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810182905260448101839052606401610560565b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff8216610f0857600480548290039055610f34565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f9391815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610ff0576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff8316611040576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526003602090815260408083209387168352929052208290558015610bcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516110da91815260200190565b60405180910390a350505050565b600061110a73ffffffffffffffffffffffffffffffffffffffff8416836111f3565b9050805160001415801561112f57508080602001905181019061112d9190611578565b155b15610884576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610560565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606061075f83836000846000808573ffffffffffffffffffffffffffffffffffffffff168486604051611226919061159a565b60006040518083038185875af1925050503d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5091509150611278868383611282565b9695505050505050565b6060826112975761129282611311565b61075f565b81511580156112bb575073ffffffffffffffffffffffffffffffffffffffff84163b155b1561130a576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610560565b508061075f565b8051156113215780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006020828403121561136557600080fd5b5035919050565b60005b8381101561138757818101518382015260200161136f565b50506000910152565b60208152600082518060208401526113af81604085016020870161136c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108c857600080fd5b6000806040838503121561141857600080fd5b611421836113e1565b946020939093013593505050565b60008060006060848603121561144457600080fd5b61144d846113e1565b925061145b602085016113e1565b9150604084013590509250925092565b60006020828403121561147d57600080fd5b61075f826113e1565b6000806040838503121561149957600080fd5b6114a2836113e1565b91506114b0602084016113e1565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761073a5761073a6114b9565b8181038181111561073a5761073a6114b9565b600181811c9082168061152657607f821691505b60208210810361155f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561073a5761073a6114b9565b60006020828403121561158a57600080fd5b8151801515811461075f57600080fd5b600082516115ac81846020870161136c565b919091019291505056fea2646970667358221220c1f8c063cc2bc3618bf37ae35bf38495be5304ebe1aada7bca2668e6e0e916d964736f6c63430008140033",
    "sourceMap": "643:3177:38:-:0;;;997:6;967:36;;1299:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1399:9;1410:11;1439:12;-1:-1:-1;;;;;1273:26:24;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:24;;1350:1;1322:31;;;1871:51:47;1844:18;;1322:31:24;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1962:5:27;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:27;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:34;1917:7;:21;-1:-1:-1;643:3177:38;;-1:-1:-1;;;643:3177:38;1528:153:25;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:25;;;1640:34;1665:8;1640:24;:34::i;:::-;1528:153;:::o;2912:187:24:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:24;;;-1:-1:-1;;;;;;3020:17:24;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:47;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:47;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:47:o;991:729::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1210:16;;-1:-1:-1;;;;;1255:31:47;;1245:42;;1235:70;;1301:1;1298;1291:12;1235:70;1373:2;1358:18;;1352:25;1324:5;;-1:-1:-1;;;;;;1426:14:47;;;1423:34;;;1453:1;1450;1443:12;1423:34;1476:61;1529:7;1520:6;1509:9;1505:22;1476:61;:::i;:::-;1466:71;;1583:2;1572:9;1568:18;1562:25;1546:41;;1612:2;1602:8;1599:16;1596:36;;;1628:1;1625;1618:12;1596:36;;1651:63;1706:7;1695:8;1684:9;1680:24;1651:63;:::i;:::-;1641:73;;;991:729;;;;;:::o;1933:380::-;2012:1;2008:12;;;;2055;;;2076:61;;2130:4;2122:6;2118:17;2108:27;;2076:61;2183:2;2175:6;2172:14;2152:18;2149:38;2146:161;;2229:10;2224:3;2220:20;2217:1;2210:31;2264:4;2261:1;2254:15;2292:4;2289:1;2282:15;2146:161;;1933:380;;;:::o;2444:545::-;2546:2;2541:3;2538:11;2535:448;;;2582:1;2607:5;2603:2;2596:17;2652:4;2648:2;2638:19;2722:2;2710:10;2706:19;2703:1;2699:27;2693:4;2689:38;2758:4;2746:10;2743:20;2740:47;;;-1:-1:-1;2781:4:47;2740:47;2836:2;2831:3;2827:12;2824:1;2820:20;2814:4;2810:31;2800:41;;2891:82;2909:2;2902:5;2899:13;2891:82;;;2954:17;;;2935:1;2924:13;2891:82;;;2895:3;;;2535:448;2444:545;;;:::o;3165:1352::-;3285:10;;-1:-1:-1;;;;;3307:30:47;;3304:56;;;3340:18;;:::i;:::-;3369:97;3459:6;3419:38;3451:4;3445:11;3419:38;:::i;:::-;3413:4;3369:97;:::i;:::-;3521:4;;3585:2;3574:14;;3602:1;3597:663;;;;4304:1;4321:6;4318:89;;;-1:-1:-1;4373:19:47;;;4367:26;4318:89;-1:-1:-1;;3122:1:47;3118:11;;;3114:24;3110:29;3100:40;3146:1;3142:11;;;3097:57;4420:81;;3567:944;;3597:663;2391:1;2384:14;;;2428:4;2415:18;;-1:-1:-1;;3633:20:47;;;3751:236;3765:7;3762:1;3759:14;3751:236;;;3854:19;;;3848:26;3833:42;;3946:27;;;;3914:1;3902:14;;;;3781:19;;3751:236;;;3755:3;4015:6;4006:7;4003:19;4000:201;;;4076:19;;;4070:26;-1:-1:-1;;4159:1:47;4155:14;;;4171:3;4151:24;4147:37;4143:42;4128:58;4113:74;;4000:201;-1:-1:-1;;;;;4247:1:47;4231:14;;;4227:22;4214:36;;-1:-1:-1;3165:1352:47:o;:::-;643:3177:38;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061018b5760003560e01c806370a08231116100d6578063a10954fe1161007f578063dd62ed3e11610059578063dd62ed3e14610445578063e30c397814610498578063f2fde38b146104c357600080fd5b8063a10954fe146103fa578063a9059cbb14610410578063d348b4091461043057600080fd5b80638b4f3b2c116100b05780638b4f3b2c146103795780638da5cb5b1461039957806395d89b41146103e557600080fd5b806370a082311461030c578063715018a61461034f57806379ba50971461036457600080fd5b80632d296bf11161013857806340c10f191161011257806340c10f19146102b057806351cff8d9146102d05780636d25d802146102f057600080fd5b80632d296bf114610265578063313ce567146102785780633609ac8f1461029457600080fd5b80630c7d5cd8116101695780630c7d5cd81461020d57806318160ddd1461023157806323b872dd1461024557600080fd5b8063053f90401461019057806306fdde03146101b2578063095ea7b3146101dd575b600080fd5b34801561019c57600080fd5b506101b06101ab366004611353565b6104e3565b005b3480156101be57600080fd5b506101c7610694565b6040516101d49190611390565b60405180910390f35b3480156101e957600080fd5b506101fd6101f8366004611405565b610726565b60405190151581526020016101d4565b34801561021957600080fd5b5061022360095481565b6040519081526020016101d4565b34801561023d57600080fd5b506000610223565b34801561025157600080fd5b506101fd61026036600461142f565b610740565b6101b0610273366004611353565b610766565b34801561028457600080fd5b50604051601281526020016101d4565b3480156102a057600080fd5b50610223670de0b6b3a764000081565b3480156102bc57600080fd5b506101b06102cb366004611405565b61088a565b3480156102dc57600080fd5b506101fd6102eb36600461146b565b61089c565b3480156102fc57600080fd5b5061022367016345785d8a000081565b34801561031857600080fd5b5061022361032736600461146b565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b34801561035b57600080fd5b506101b06108cd565b34801561037057600080fd5b506101b06108e1565b34801561038557600080fd5b506101b0610394366004611353565b610955565b3480156103a557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d4565b3480156103f157600080fd5b506101c7610962565b34801561040657600080fd5b5061022360085481565b34801561041c57600080fd5b506101fd61042b366004611405565b610971565b34801561043c57600080fd5b5061022361097f565b34801561045157600080fd5b50610223610460366004611486565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291909152205490565b3480156104a457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff166103c0565b3480156104cf57600080fd5b506101b06104de36600461146b565b6109aa565b6104eb610a5a565b33600090815260026020526040902054811115610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7420656e6f75676820746f6b656e7300000000000000000000000000000060448201526064015b60405180910390fd5b60008161057461097f565b61057e91906114e8565b9050806008541015610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4e6f7420656e6f75676820726573657276652062616c616e636520746f20627560448201527f79206261636b00000000000000000000000000000000000000000000000000006064820152608401610560565b336000908152600a6020526040812080548492906106319084906114ff565b9091555061064190503383610a9d565b806008600082825461065391906114ff565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610685573d6000803e3d6000fd5b50506106916001600755565b50565b6060600580546106a390611512565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90611512565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050505050905090565b600033610734818585610af9565b60019150505b92915050565b60003361074e858285610b06565b610759858585610bd5565b60019150505b9392505050565b60008161077161097f565b61077b91906114e8565b9050803410156107c0576040517fb99e2ab700000000000000000000000000000000000000000000000000000000815234600482015260248101829052604401610560565b6107ca3383610c80565b80600860008282546107dc9190611565565b9091555050336000908152600a602052604081208054849290610800908490611565565b909155505060408051338152602081018490529081018290527f35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e9060600160405180910390a18034111561088657336108fc61085c83346114ff565b6040518115909202916000818181858888f19350505050158015610884573d6000803e3d6000fd5b505b5050565b610892610cdc565b6108868282610c80565b60006108a6610cdc565b306000818152600260205260409020546108c4919081908590610d2f565b5060015b919050565b6108d5610cdc565b6108df6000610dc4565b565b600154339073ffffffffffffffffffffffffffffffffffffffff16811461094c576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610560565b61069181610dc4565b61095d610cdc565b600955565b6060600680546106a390611512565b600033610734818585610bd5565b600061099367016345785d8a0000826114e8565b6109a590670de0b6b3a7640000611565565b905090565b6109b2610cdc565b6001805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091168117909155610a1560005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600260075403610a96576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600755565b73ffffffffffffffffffffffffffffffffffffffff8216610aed576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b61088682600083610df5565b6108848383836001610fa0565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600360209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bcf5781811015610bc0576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024810182905260448101839052606401610560565b610bcf84848484036000610fa0565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c25576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff8216610c75576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b610884838383610df5565b73ffffffffffffffffffffffffffffffffffffffff8216610cd0576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b61088660008383610df5565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108df576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610560565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610bcf9085906110e8565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556106918161117e565b73ffffffffffffffffffffffffffffffffffffffff8316610e2d578060046000828254610e229190611565565b90915550610edf9050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604090205481811015610eb3576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810182905260448101839052606401610560565b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff8216610f0857600480548290039055610f34565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f9391815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610ff0576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff8316611040576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610560565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526003602090815260408083209387168352929052208290558015610bcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516110da91815260200190565b60405180910390a350505050565b600061110a73ffffffffffffffffffffffffffffffffffffffff8416836111f3565b9050805160001415801561112f57508080602001905181019061112d9190611578565b155b15610884576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610560565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606061075f83836000846000808573ffffffffffffffffffffffffffffffffffffffff168486604051611226919061159a565b60006040518083038185875af1925050503d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5091509150611278868383611282565b9695505050505050565b6060826112975761129282611311565b61075f565b81511580156112bb575073ffffffffffffffffffffffffffffffffffffffff84163b155b1561130a576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610560565b508061075f565b8051156113215780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006020828403121561136557600080fd5b5035919050565b60005b8381101561138757818101518382015260200161136f565b50506000910152565b60208152600082518060208401526113af81604085016020870161136c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108c857600080fd5b6000806040838503121561141857600080fd5b611421836113e1565b946020939093013593505050565b60008060006060848603121561144457600080fd5b61144d846113e1565b925061145b602085016113e1565b9150604084013590509250925092565b60006020828403121561147d57600080fd5b61075f826113e1565b6000806040838503121561149957600080fd5b6114a2836113e1565b91506114b0602084016113e1565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761073a5761073a6114b9565b8181038181111561073a5761073a6114b9565b600181811c9082168061152657607f821691505b60208210810361155f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561073a5761073a6114b9565b60006020828403121561158a57600080fd5b8151801515811461075f57600080fd5b600082516115ac81846020870161136c565b919091019291505056fea2646970667358221220c1f8c063cc2bc3618bf37ae35bf38495be5304ebe1aada7bca2668e6e0e916d964736f6c63430008140033",
    "sourceMap": "643:3177:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2944:487;;;;;;;;;;-1:-1:-1;2944:487:38;;;;;:::i;:::-;;:::i;:::-;;2074:89:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:27;;;;;:::i;:::-;;:::i;:::-;;;1539:14:47;;1532:22;1514:41;;1502:2;1487:18;4293:186:27;1374:187:47;967:36:38;;;;;;;;;;;;;;;;;;;1712:25:47;;;1700:2;1685:18;967:36:38;1566:177:47;1564:99:38;;;;;;;;;;-1:-1:-1;1617:14:38;1564:99;;5039:244:27;;;;;;;;;;-1:-1:-1;5039:244:27;;;;;:::i;:::-;;:::i;2164:598:38:-;;;;;;:::i;:::-;;:::i;3002:82:27:-;;;;;;;;;;-1:-1:-1;3002:82:27;;3075:2;2223:36:47;;2211:2;2196:18;3002:82:27;2081:184:47;741:45:38;;;;;;;;;;;;779:7;741:45;;1465:93;;;;;;;;;;-1:-1:-1;1465:93:38;;;;;:::i;:::-;;:::i;3619:199::-;;;;;;;;;;-1:-1:-1;3619:199:38;;;;;:::i;:::-;;:::i;830:51::-;;;;;;;;;;;;872:9;830:51;;3299:116:27;;;;;;;;;;-1:-1:-1;3299:116:27;;;;;:::i;:::-;3390:18;;3364:7;3390:18;;;:9;:18;;;;;;;3299:116;2293:101:24;;;;;;;;;;;;;:::i;1761:229:25:-;;;;;;;;;;;;;:::i;1857:112:38:-;;;;;;;;;;-1:-1:-1;1857:112:38;;;;;:::i;:::-;;:::i;1638:85:24:-;;;;;;;;;;-1:-1:-1;1684:7:24;1710:6;;;1638:85;;;2637:42:47;2625:55;;;2607:74;;2595:2;2580:18;1638:85:24;2461:226:47;2276:93:27;;;;;;;;;;;;;:::i;932:29:38:-;;;;;;;;;;;;;;;;3610:178:27;;;;;;;;;;-1:-1:-1;3610:178:27;;;;;:::i;:::-;;:::i;1724:127:38:-;;;;;;;;;;;;;:::i;3846:140:27:-;;;;;;;;;;-1:-1:-1;3846:140:27;;;;;:::i;:::-;3952:18;;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;874:99:25;;;;;;;;;;-1:-1:-1;953:13:25;;;;874:99;;1166:178;;;;;;;;;;-1:-1:-1;1166:178:25;;;;;:::i;:::-;;:::i;2944:487:38:-;2356:21:34;:19;:21::i;:::-;3025:10:38::1;3364:7:27::0;3390:18;;;:9;:18;;;;;;3040:4:38;-1:-1:-1;3015:29:38::1;3007:59;;;::::0;::::1;::::0;;3159:2:47;3007:59:38::1;::::0;::::1;3141:21:47::0;3198:2;3178:18;;;3171:30;3237:19;3217:18;;;3210:47;3274:18;;3007:59:38::1;;;;;;;;;3076:17;3115:4;3096:16;:14;:16::i;:::-;:23;;;;:::i;:::-;3076:43;;3155:9;3137:14;;:27;;3129:78;;;::::0;::::1;::::0;;3867:2:47;3129:78:38::1;::::0;::::1;3849:21:47::0;3906:2;3886:18;;;3879:30;3945:34;3925:18;;;3918:62;4016:8;3996:18;;;3989:36;4042:19;;3129:78:38::1;3665:402:47::0;3129:78:38::1;3226:10;3217:20;::::0;;;:8:::1;:20;::::0;;;;:28;;3241:4;;3217:20;:28:::1;::::0;3241:4;;3217:28:::1;:::i;:::-;::::0;;;-1:-1:-1;3255:23:38::1;::::0;-1:-1:-1;3261:10:38::1;3273:4:::0;3255:5:::1;:23::i;:::-;3306:9;3288:14;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3355:39:38::1;::::0;3363:10:::1;::::0;3355:39;::::1;;;::::0;3384:9;;3355:39:::1;::::0;;;3384:9;3363:10;3355:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2997:434;2398:20:34::0;1713:1;2924:7;:21;2744:208;2398:20;2944:487:38;:::o;2074:89:27:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:33;4420:31:27;735:10:33;4436:7:27;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:33;5182:37:27;5198:4;735:10:33;5213:5:27;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;2164:598:38:-;2223:18;2263:4;2244:16;:14;:16::i;:::-;:23;;;;:::i;:::-;2223:44;;2293:10;2281:9;:22;2277:102;;;2326:42;;;;;2346:9;2326:42;;;4821:25:47;4862:18;;;4855:34;;;4794:18;;2326:42:38;4647:248:47;2277:102:38;2436:23;2442:10;2454:4;2436:5;:23::i;:::-;2520:10;2502:14;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;2549:10:38;2540:20;;;;:8;:20;;;;;:28;;2564:4;;2540:20;:28;;2564:4;;2540:28;:::i;:::-;;;;-1:-1:-1;;2583:39:38;;;2593:10;5232:74:47;;5337:2;5322:18;;5315:34;;;5365:18;;;5358:34;;;2583:39:38;;5220:2:47;5205:18;2583:39:38;;;;;;;2667:10;2655:9;:22;2651:105;;;2701:10;2693:52;2722:22;2734:10;2722:9;:22;:::i;:::-;2693:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:105;2213:549;2164:598;:::o;1465:93::-;1531:13:24;:11;:13::i;:::-;1534:17:38::1;1540:2;1544:6;1534:5;:17::i;3619:199::-:0;3684:4;1531:13:24;:11;:13::i;:::-;3747:4:38::1;3364:7:27::0;3390:18;;;:9;:18;;;;;;3700:90:38::1;::::0;3747:4;;;3754:9;;3700:38:::1;:90::i;:::-;-1:-1:-1::0;3807:4:38::1;1554:1:24;3619:199:38::0;;;:::o;2293:101:24:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1761:229:25:-;953:13;;735:10:33;;1856:24:25;953:13;1856:24;;1852:96;;1903:34;;;;;2637:42:47;2625:55;;1903:34:25;;;2607:74:47;2580:18;;1903:34:25;2461:226:47;1852:96:25;1957:26;1976:6;1957:18;:26::i;1857:112:38:-;1531:13:24;:11;:13::i;:::-;1934:12:38::1;:28:::0;1857:112::o;2276:93:27:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:33;3733:27:27;735:10:33;3750:2:27;3754:5;3733:9;:27::i;1724:127:38:-;1771:7;1812:31;872:9;1771:7;1812:31;:::i;:::-;1797:47;;779:7;1797:47;:::i;:::-;1790:54;;1724:127;:::o;1166:178:25:-;1531:13:24;:11;:13::i;:::-;1255::25::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1319:7:::1;1684::24::0;1710:6;;;;1638:85;1319:7:25::1;1294:43;;;;;;;;;;;;1166:178:::0;:::o;2431:307:34:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;8247:206:27:-;8317:21;;;8313:89;;8361:30;;;;;8388:1;8361:30;;;2607:74:47;2580:18;;8361:30:27;2461:226:47;8313:89:27;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;3952:18;;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;5262:42:47;5250:55;;10936:60:27;;;5232:74:47;5322:18;;;5315:34;;;5365:18;;;5358:34;;;5205:18;;10936:60:27;5030:368:47;10881:130:27;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;5739:18;;;5735:86;;5780:30;;;;;5807:1;5780:30;;;2607:74:47;2580:18;;5780:30:27;2461:226:47;5735:86:27;5834:16;;;5830:86;;5873:32;;;;;5902:1;5873:32;;;2607:74:47;2580:18;;5873:32:27;2461:226:47;5830:86:27;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;7791:21;;;7787:91;;7835:32;;;;;7864:1;7835:32;;;2607:74:47;2580:18;;7835:32:27;2461:226:47;7787:91:27;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;1796:162:24:-;1684:7;1710:6;1855:23;1710:6;735:10:33;1855:23:24;1851:101;;1901:40;;;;;735:10:33;1901:40:24;;;2607:74:47;2580:18;;1901:40:24;2461:226:47;1702:188:31;1829:53;;;1844:18;5684:15:47;;;1829:53:31;;;5666:34:47;5736:15;;5716:18;;;5709:43;5768:18;;;;5761:34;;;1829:53:31;;;;;;;;;;5578:18:47;;;;1829:53:31;;;;;;;;;;;;;;1802:81;;1822:5;;1802:19;:81::i;1528:153:25:-;1617:13;1610:20;;;;;;1640:34;1665:8;1640:24;:34::i;6271:1107:27:-;6360:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:27;;-1:-1:-1;6356:540:27;;6570:15;;;6548:19;6570:15;;;:9;:15;;;;;;6603:19;;;6599:115;;;6649:50;;;;;5262:42:47;5250:55;;6649:50:27;;;5232:74:47;5322:18;;;5315:34;;;5365:18;;;5358:34;;;5205:18;;6649:50:27;5030:368:47;6599:115:27;6834:15;;;;;;;:9;:15;;;;;6852:19;;;;6834:37;;6356:540;6910:16;;;6906:425;;7073:12;:21;;;;;;;6906:425;;;7284:13;;;;;;;:9;:13;;;;;:22;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;1712::47;;1700:2;1685:18;;1566:177;7346:25:27;;;;;;;;6271:1107;;;:::o;9949:432::-;10061:19;;;10057:89;;10103:32;;;;;10132:1;10103:32;;;2607:74:47;2580:18;;10103:32:27;2461:226:47;10057:89:27;10159:21;;;10155:90;;10203:31;;;;;10231:1;10203:31;;;2607:74:47;2580:18;;10203:31:27;2461:226:47;10155:90:27;10254:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;1712:25:47;;1700:2;1685:18;;1566:177;10333:31:27;;;;;;;;9949:432;;;;:::o;4059:629:31:-;4478:23;4504:33;:27;;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;;;;2637:42:47;2625:55;;4631:40:31;;;2607:74:47;2580:18;;4631:40:31;2461:226:47;2912:187:24;2985:16;3004:6;;;3020:17;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2705:151:32:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:32:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:32;;;;:23;5045:49;5041:119;;;5121:24;;;;;2637:42:47;2625:55;;5121:24:32;;;2607:74:47;2580:18;;5121:24:32;2461:226:47;5041:119:32;-1:-1:-1;5180:10:32;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:180:47;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:47;;14:180;-1:-1:-1;14:180:47:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:47;423:16;;416:27;199:250::o;454:455::-;603:2;592:9;585:21;566:4;635:6;629:13;678:6;673:2;662:9;658:18;651:34;694:79;766:6;761:2;750:9;746:18;741:2;733:6;729:15;694:79;:::i;:::-;825:2;813:15;830:66;809:88;794:104;;;;900:2;790:113;;454:455;-1:-1:-1;;454:455:47:o;914:196::-;982:20;;1042:42;1031:54;;1021:65;;1011:93;;1100:1;1097;1090:12;1115:254;1183:6;1191;1244:2;1232:9;1223:7;1219:23;1215:32;1212:52;;;1260:1;1257;1250:12;1212:52;1283:29;1302:9;1283:29;:::i;:::-;1273:39;1359:2;1344:18;;;;1331:32;;-1:-1:-1;;;1115:254:47:o;1748:328::-;1825:6;1833;1841;1894:2;1882:9;1873:7;1869:23;1865:32;1862:52;;;1910:1;1907;1900:12;1862:52;1933:29;1952:9;1933:29;:::i;:::-;1923:39;;1981:38;2015:2;2004:9;2000:18;1981:38;:::i;:::-;1971:48;;2066:2;2055:9;2051:18;2038:32;2028:42;;1748:328;;;;;:::o;2270:186::-;2329:6;2382:2;2370:9;2361:7;2357:23;2353:32;2350:52;;;2398:1;2395;2388:12;2350:52;2421:29;2440:9;2421:29;:::i;2692:260::-;2760:6;2768;2821:2;2809:9;2800:7;2796:23;2792:32;2789:52;;;2837:1;2834;2827:12;2789:52;2860:29;2879:9;2860:29;:::i;:::-;2850:39;;2908:38;2942:2;2931:9;2927:18;2908:38;:::i;:::-;2898:48;;2692:260;;;;;:::o;3303:184::-;3355:77;3352:1;3345:88;3452:4;3449:1;3442:15;3476:4;3473:1;3466:15;3492:168;3565:9;;;3596;;3613:15;;;3607:22;;3593:37;3583:71;;3634:18;;:::i;4072:128::-;4139:9;;;4160:11;;;4157:37;;;4174:18;;:::i;4205:437::-;4284:1;4280:12;;;;4327;;;4348:61;;4402:4;4394:6;4390:17;4380:27;;4348:61;4455:2;4447:6;4444:14;4424:18;4421:38;4418:218;;4492:77;4489:1;4482:88;4593:4;4590:1;4583:15;4621:4;4618:1;4611:15;4418:218;;4205:437;;;:::o;4900:125::-;4965:9;;;4986:10;;;4983:36;;;4999:18;;:::i;5806:277::-;5873:6;5926:2;5914:9;5905:7;5901:23;5897:32;5894:52;;;5942:1;5939;5932:12;5894:52;5974:9;5968:16;6027:5;6020:13;6013:21;6006:5;6003:32;5993:60;;6049:1;6046;6039:12;6088:287;6217:3;6255:6;6249:13;6271:66;6330:6;6325:3;6318:4;6310:6;6306:17;6271:66;:::i;:::-;6353:16;;;;;6088:287;-1:-1:-1;;6088:287:47:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "PRICE_INCREMENT()": "6d25d802",
    "START_PRICE()": "3609ac8f",
    "acceptOwnership()": "79ba5097",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "buyBack(uint256)": "053f9040",
    "buyToken(uint256)": "2d296bf1",
    "calculatePrice()": "d348b409",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "reserveBalance()": "a10954fe",
    "reserveRatio()": "0c7d5cd8",
    "setReserveRatio(uint256)": "8b4f3b2c",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(address)": "51cff8d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceReceived\",\"type\":\"uint256\"}],\"name\":\"TokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePaid\",\"type\":\"uint256\"}],\"name\":\"TokenSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_INCREMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"buyBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_qty\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserveRatio\",\"type\":\"uint256\"}],\"name\":\"setReserveRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mehdi R.\",\"details\":\"This contract inherits from ERC20 and Ownable2Step\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buyBack(uint256)\":{\"details\":\"The price of the token is calculated using calculatePrice()\",\"params\":{\"_qty\":\"The amount of tokens to sell back\"}},\"buyToken(uint256)\":{\"details\":\"The price of the token is calculated using liquidTokenPrice()Contract receives eth in exchange of tokens for the buyer.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Only the owner can withdraw the reserve tokens\",\"params\":{\"_receiver\":\"The address to receive the reserve tokens\"}}},\"title\":\"Token sale and buyback with bonding curve\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyBack(uint256)\":{\"notice\":\"Selling tokens back to the contract\"},\"buyToken(uint256)\":{\"notice\":\"Buy token with reserve token\"},\"calculatePrice()\":{\"notice\":\"Linear bonding curve Price calculation\"},\"withdraw(address)\":{\"notice\":\"Withdraw reserve tokens from the contract\"}},\"notice\":\"The more tokens a user buys, the more expensive the token becomes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenSale.sol\":\"TokenSale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/math/=lib/prb-math/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\"lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"src/TokenSale.sol\":{\"keccak256\":\"0xb3216eb122c07e27df03773294bc5b2fdbab4a1877f9b82f2d9e808b3eb88ed5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8c125b275b0f2031aa06cf5040fb1012ed7974473322b9b5c6ea21b6b2fc4c2b\",\"dweb:/ipfs/QmSrMQrcCwiUsJtdYEbMKAWZZNMmtLxXTP1hh7cDiHuoyb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "payment",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "required",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientPayment"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "priceReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenBought",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pricePaid",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenSold",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRICE_INCREMENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "START_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_qty",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyBack"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_qty",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyToken"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculatePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_reserveRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReserveRatio"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "buyBack(uint256)": {
            "details": "The price of the token is calculated using calculatePrice()",
            "params": {
              "_qty": "The amount of tokens to sell back"
            }
          },
          "buyToken(uint256)": {
            "details": "The price of the token is calculated using liquidTokenPrice()Contract receives eth in exchange of tokens for the buyer."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "withdraw(address)": {
            "details": "Only the owner can withdraw the reserve tokens",
            "params": {
              "_receiver": "The address to receive the reserve tokens"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyBack(uint256)": {
            "notice": "Selling tokens back to the contract"
          },
          "buyToken(uint256)": {
            "notice": "Buy token with reserve token"
          },
          "calculatePrice()": {
            "notice": "Linear bonding curve Price calculation"
          },
          "withdraw(address)": {
            "notice": "Withdraw reserve tokens from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/math/=lib/prb-math/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc1363-payable-token/=lib/erc1363-payable-token/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/TokenSale.sol": "TokenSale"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "src/TokenSale.sol": {
        "keccak256": "0xb3216eb122c07e27df03773294bc5b2fdbab4a1877f9b82f2d9e808b3eb88ed5",
        "urls": [
          "bzz-raw://8c125b275b0f2031aa06cf5040fb1012ed7974473322b9b5c6ea21b6b2fc4c2b",
          "dweb:/ipfs/QmSrMQrcCwiUsJtdYEbMKAWZZNMmtLxXTP1hh7cDiHuoyb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/TokenSale.sol",
    "id": 45851,
    "exportedSymbols": {
      "ERC20": [
        44733
      ],
      "IERC20": [
        44811
      ],
      "Ownable": [
        43995
      ],
      "Ownable2Step": [
        44081
      ],
      "ReentrancyGuard": [
        45507
      ],
      "SafeERC20": [
        45163
      ],
      "TokenSale": [
        45850
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3782:38",
    "nodes": [
      {
        "id": 45566,
        "nodeType": "PragmaDirective",
        "src": "39:24:38",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 45568,
        "nodeType": "ImportDirective",
        "src": "65:68:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45851,
        "sourceUnit": 44734,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45567,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44733,
              "src": "73:5:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45570,
        "nodeType": "ImportDirective",
        "src": "134:70:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45851,
        "sourceUnit": 44812,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45569,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44811,
              "src": "142:6:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45571,
        "nodeType": "ImportDirective",
        "src": "205:57:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45851,
        "sourceUnit": 44082,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45573,
        "nodeType": "ImportDirective",
        "src": "263:82:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45851,
        "sourceUnit": 45164,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45572,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45163,
              "src": "271:9:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45575,
        "nodeType": "ImportDirective",
        "src": "346:82:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45851,
        "sourceUnit": 45508,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45574,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45507,
              "src": "354:15:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45850,
        "nodeType": "ContractDefinition",
        "src": "643:3177:38",
        "nodes": [
          {
            "id": 45586,
            "nodeType": "UsingForDirective",
            "src": "708:27:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 45583,
              "name": "SafeERC20",
              "nameLocations": [
                "714:9:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45163,
              "src": "714:9:38"
            },
            "typeName": {
              "id": 45585,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45584,
                "name": "IERC20",
                "nameLocations": [
                  "728:6:38"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44811,
                "src": "728:6:38"
              },
              "referencedDeclaration": 44811,
              "src": "728:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44811",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 45589,
            "nodeType": "VariableDeclaration",
            "src": "741:45:38",
            "nodes": [],
            "constant": true,
            "functionSelector": "3609ac8f",
            "mutability": "constant",
            "name": "START_PRICE",
            "nameLocation": "765:11:38",
            "scope": 45850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45587,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "741:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 45588,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "779:7:38",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 45592,
            "nodeType": "VariableDeclaration",
            "src": "830:51:38",
            "nodes": [],
            "constant": true,
            "functionSelector": "6d25d802",
            "mutability": "constant",
            "name": "PRICE_INCREMENT",
            "nameLocation": "854:15:38",
            "scope": 45850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45590,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 45591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "872:9:38",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "id": 45594,
            "nodeType": "VariableDeclaration",
            "src": "932:29:38",
            "nodes": [],
            "constant": false,
            "functionSelector": "a10954fe",
            "mutability": "mutable",
            "name": "reserveBalance",
            "nameLocation": "947:14:38",
            "scope": 45850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45593,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "932:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45597,
            "nodeType": "VariableDeclaration",
            "src": "967:36:38",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c7d5cd8",
            "mutability": "mutable",
            "name": "reserveRatio",
            "nameLocation": "982:12:38",
            "scope": 45850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45595,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030303030",
              "id": 45596,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "997:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000_by_1",
                "typeString": "int_const 500000"
              },
              "value": "500000"
            },
            "visibility": "public"
          },
          {
            "id": 45601,
            "nodeType": "VariableDeclaration",
            "src": "1009:44:38",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1045:8:38",
            "scope": 45850,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 45600,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 45598,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1017:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1009:27:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 45599,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1028:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 45609,
            "nodeType": "EventDefinition",
            "src": "1098:66:38",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "35ea94addbc62df281ade49cc2ad9b3d9259166170cf702928b4ddc045f7256e",
            "name": "TokenSold",
            "nameLocation": "1104:9:38",
            "parameters": {
              "id": 45608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1122:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45609,
                  "src": "1114:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1137:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45609,
                  "src": "1129:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45607,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pricePaid",
                  "nameLocation": "1153:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45609,
                  "src": "1145:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:50:38"
            }
          },
          {
            "id": 45615,
            "nodeType": "EventDefinition",
            "src": "1169:57:38",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "004b1bf7d4f31d7d49654e7a5d90fe53ab6c8f27b87c8bdb13885f49c94a640f",
            "name": "TokenBought",
            "nameLocation": "1175:11:38",
            "parameters": {
              "id": 45614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45611,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1195:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45615,
                  "src": "1187:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45613,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "priceReceived",
                  "nameLocation": "1211:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45615,
                  "src": "1203:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:39:38"
            }
          },
          {
            "id": 45621,
            "nodeType": "ErrorDefinition",
            "src": "1232:61:38",
            "nodes": [],
            "errorSelector": "b99e2ab7",
            "name": "InsufficientPayment",
            "nameLocation": "1238:19:38",
            "parameters": {
              "id": 45620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45617,
                  "mutability": "mutable",
                  "name": "payment",
                  "nameLocation": "1266:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45621,
                  "src": "1258:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45619,
                  "mutability": "mutable",
                  "name": "required",
                  "nameLocation": "1283:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45621,
                  "src": "1275:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:35:38"
            }
          },
          {
            "id": 45638,
            "nodeType": "FunctionDefinition",
            "src": "1299:160:38",
            "nodes": [],
            "body": {
              "id": 45637,
              "nodeType": "Block",
              "src": "1457:2:38",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 45630,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45625,
                    "src": "1399:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 45631,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45627,
                    "src": "1410:11:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 45632,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45629,
                  "name": "ERC20",
                  "nameLocations": [
                    "1393:5:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44733,
                  "src": "1393:5:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1393:29:38"
              },
              {
                "arguments": [
                  {
                    "id": 45634,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45623,
                    "src": "1439:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 45635,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45633,
                  "name": "Ownable",
                  "nameLocations": [
                    "1431:7:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43995,
                  "src": "1431:7:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1431:21:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45623,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1319:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45638,
                  "src": "1311:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45625,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1347:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45638,
                  "src": "1333:23:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45627,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1372:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45638,
                  "src": "1358:25:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:74:38"
            },
            "returnParameters": {
              "id": 45636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:0:38"
            },
            "scope": 45850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45653,
            "nodeType": "FunctionDefinition",
            "src": "1465:93:38",
            "nodes": [],
            "body": {
              "id": 45652,
              "nodeType": "Block",
              "src": "1524:34:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45648,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45640,
                        "src": "1540:2:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45649,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45642,
                        "src": "1544:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45647,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44573,
                      "src": "1534:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:17:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45651,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:17:38"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45645,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45644,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1514:9:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43906,
                  "src": "1514:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:9:38"
              }
            ],
            "name": "mint",
            "nameLocation": "1474:4:38",
            "parameters": {
              "id": 45643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45640,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1487:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45653,
                  "src": "1479:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1499:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45653,
                  "src": "1491:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1478:28:38"
            },
            "returnParameters": {
              "id": 45646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:0:38"
            },
            "scope": 45850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45662,
            "nodeType": "FunctionDefinition",
            "src": "1564:99:38",
            "nodes": [],
            "body": {
              "id": 45661,
              "nodeType": "Block",
              "src": "1633:30:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45659,
                    "name": "supply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45657,
                    "src": "1650:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45658,
                  "id": 45660,
                  "nodeType": "Return",
                  "src": "1643:13:38"
                }
              ]
            },
            "baseFunctions": [
              44306
            ],
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1573:11:38",
            "overrides": {
              "id": 45655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1599:8:38"
            },
            "parameters": {
              "id": 45654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:2:38"
            },
            "returnParameters": {
              "id": 45658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45657,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "1625:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45662,
                  "src": "1617:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1616:16:38"
            },
            "scope": 45850,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45677,
            "nodeType": "FunctionDefinition",
            "src": "1724:127:38",
            "nodes": [],
            "body": {
              "id": 45676,
              "nodeType": "Block",
              "src": "1780:71:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45668,
                      "name": "START_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45589,
                      "src": "1797:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 45669,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                45662
                              ],
                              "referencedDeclaration": 45662,
                              "src": "1812:11:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 45670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1812:13:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 45671,
                            "name": "PRICE_INCREMENT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "1828:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1812:31:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 45673,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1811:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1797:47:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45667,
                  "id": 45675,
                  "nodeType": "Return",
                  "src": "1790:54:38"
                }
              ]
            },
            "documentation": {
              "id": 45663,
              "nodeType": "StructuredDocumentation",
              "src": "1669:50:38",
              "text": "@notice Linear bonding curve Price calculation"
            },
            "functionSelector": "d348b409",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePrice",
            "nameLocation": "1733:14:38",
            "parameters": {
              "id": 45664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:2:38"
            },
            "returnParameters": {
              "id": 45667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45677,
                  "src": "1771:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:9:38"
            },
            "scope": 45850,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45689,
            "nodeType": "FunctionDefinition",
            "src": "1857:112:38",
            "nodes": [],
            "body": {
              "id": 45688,
              "nodeType": "Block",
              "src": "1924:45:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45684,
                      "name": "reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45597,
                      "src": "1934:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45685,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45679,
                      "src": "1949:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1934:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45687,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:28:38"
                }
              ]
            },
            "functionSelector": "8b4f3b2c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45681,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1914:9:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43906,
                  "src": "1914:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1914:9:38"
              }
            ],
            "name": "setReserveRatio",
            "nameLocation": "1866:15:38",
            "parameters": {
              "id": 45680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45679,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "1890:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45689,
                  "src": "1882:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:23:38"
            },
            "returnParameters": {
              "id": 45683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1924:0:38"
            },
            "scope": 45850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45757,
            "nodeType": "FunctionDefinition",
            "src": "2164:598:38",
            "nodes": [],
            "body": {
              "id": 45756,
              "nodeType": "Block",
              "src": "2213:549:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45696,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "2231:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 45756,
                      "src": "2223:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45695,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2223:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45701,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45697,
                        "name": "calculatePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "2244:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 45698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2244:16:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 45699,
                      "name": "_qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45692,
                      "src": "2263:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:23:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2223:44:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 45702,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2281:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2285:5:38",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2281:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 45704,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45696,
                      "src": "2293:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2281:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45713,
                  "nodeType": "IfStatement",
                  "src": "2277:102:38",
                  "trueBody": {
                    "id": 45712,
                    "nodeType": "Block",
                    "src": "2305:74:38",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 45707,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2346:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 45708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2350:5:38",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2346:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 45709,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45696,
                              "src": "2357:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 45706,
                            "name": "InsufficientPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45621,
                            "src": "2326:19:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 45710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:42:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45711,
                        "nodeType": "RevertStatement",
                        "src": "2319:49:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45715,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2442:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2446:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2442:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45717,
                        "name": "_qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45692,
                        "src": "2454:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45714,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44573,
                      "src": "2436:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:23:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45719,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:23:38"
                },
                {
                  "expression": {
                    "id": 45722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45720,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45594,
                      "src": "2502:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 45721,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45696,
                      "src": "2520:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2502:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45723,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:28:38"
                },
                {
                  "expression": {
                    "id": 45729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45724,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45601,
                        "src": "2540:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 45727,
                      "indexExpression": {
                        "expression": {
                          "id": 45725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2549:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2553:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2549:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2540:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 45728,
                      "name": "_qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45692,
                      "src": "2564:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2540:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45730,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:28:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45732,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2593:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2597:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2593:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45734,
                        "name": "_qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45692,
                        "src": "2605:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45735,
                        "name": "totalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45696,
                        "src": "2611:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45731,
                      "name": "TokenSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45609,
                      "src": "2583:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 45736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:39:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45737,
                  "nodeType": "EmitStatement",
                  "src": "2578:44:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 45738,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2655:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2659:5:38",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2655:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 45740,
                      "name": "totalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45696,
                      "src": "2667:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2655:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45755,
                  "nodeType": "IfStatement",
                  "src": "2651:105:38",
                  "trueBody": {
                    "id": 45754,
                    "nodeType": "Block",
                    "src": "2679:77:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 45748,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2722:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 45749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2726:5:38",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2722:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 45750,
                                "name": "totalPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45696,
                                "src": "2734:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2722:22:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 45744,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2701:3:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 45745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2705:6:38",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2701:10:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2693:8:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 45742,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2693:8:38",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 45746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2693:19:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 45747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2713:8:38",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2693:28:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 45752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2693:52:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45753,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:52:38"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 45690,
              "nodeType": "StructuredDocumentation",
              "src": "1975:184:38",
              "text": "@notice Buy token with reserve token\n@dev The price of the token is calculated using liquidTokenPrice()\n@dev Contract receives eth in exchange of tokens for the buyer."
            },
            "functionSelector": "2d296bf1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyToken",
            "nameLocation": "2173:8:38",
            "parameters": {
              "id": 45693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45692,
                  "mutability": "mutable",
                  "name": "_qty",
                  "nameLocation": "2190:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45757,
                  "src": "2182:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2181:14:38"
            },
            "returnParameters": {
              "id": 45694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:0:38"
            },
            "scope": 45850,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45816,
            "nodeType": "FunctionDefinition",
            "src": "2944:487:38",
            "nodes": [],
            "body": {
              "id": 45815,
              "nodeType": "Block",
              "src": "2997:434:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 45767,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3025:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 45768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3029:6:38",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3025:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45766,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44319,
                            "src": "3015:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 45769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:21:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 45770,
                          "name": "_qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45760,
                          "src": "3040:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3015:29:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73",
                        "id": 45772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3046:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        },
                        "value": "Not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
                          "typeString": "literal_string \"Not enough tokens\""
                        }
                      ],
                      "id": 45765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3007:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3007:59:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45774,
                  "nodeType": "ExpressionStatement",
                  "src": "3007:59:38"
                },
                {
                  "assignments": [
                    45776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45776,
                      "mutability": "mutable",
                      "name": "ethAmount",
                      "nameLocation": "3084:9:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 45815,
                      "src": "3076:17:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45775,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3076:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45781,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45777,
                        "name": "calculatePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "3096:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure returns (uint256)"
                        }
                      },
                      "id": 45778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3096:16:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 45779,
                      "name": "_qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45760,
                      "src": "3115:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3096:23:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3076:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45783,
                          "name": "reserveBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45594,
                          "src": "3137:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 45784,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45776,
                          "src": "3155:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3137:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820726573657276652062616c616e636520746f20627579206261636b",
                        "id": 45786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3166:40:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_413b97de9f65da29bdd8f7185e4fe1df304ed4a244c4cc10497ec1a8d6fef099",
                          "typeString": "literal_string \"Not enough reserve balance to buy back\""
                        },
                        "value": "Not enough reserve balance to buy back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_413b97de9f65da29bdd8f7185e4fe1df304ed4a244c4cc10497ec1a8d6fef099",
                          "typeString": "literal_string \"Not enough reserve balance to buy back\""
                        }
                      ],
                      "id": 45782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3129:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3129:78:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45788,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:78:38"
                },
                {
                  "expression": {
                    "id": 45794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 45789,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45601,
                        "src": "3217:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 45792,
                      "indexExpression": {
                        "expression": {
                          "id": 45790,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3226:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3230:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3226:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3217:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 45793,
                      "name": "_qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45760,
                      "src": "3241:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3217:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45795,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:28:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3261:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3265:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3261:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45799,
                        "name": "_qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45760,
                        "src": "3273:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45796,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44606,
                      "src": "3255:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:23:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45801,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:23:38"
                },
                {
                  "expression": {
                    "id": 45804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45802,
                      "name": "reserveBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45594,
                      "src": "3288:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 45803,
                      "name": "ethAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45776,
                      "src": "3306:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3288:27:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45805,
                  "nodeType": "ExpressionStatement",
                  "src": "3288:27:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45812,
                        "name": "ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45776,
                        "src": "3384:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 45808,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3363:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 45809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3367:6:38",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3363:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3355:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 45806,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3355:8:38",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3355:19:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 45811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3375:8:38",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3355:28:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 45813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3355:39:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45814,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:39:38"
                }
              ]
            },
            "documentation": {
              "id": 45758,
              "nodeType": "StructuredDocumentation",
              "src": "2768:171:38",
              "text": "@notice Selling tokens back to the contract\n@dev The price of the token is calculated using calculatePrice()\n@param _qty The amount of tokens to sell back"
            },
            "functionSelector": "053f9040",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45762,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2984:12:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45471,
                  "src": "2984:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2984:12:38"
              }
            ],
            "name": "buyBack",
            "nameLocation": "2953:7:38",
            "parameters": {
              "id": 45761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45760,
                  "mutability": "mutable",
                  "name": "_qty",
                  "nameLocation": "2969:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45816,
                  "src": "2961:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:14:38"
            },
            "returnParameters": {
              "id": 45764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2997:0:38"
            },
            "scope": 45850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45849,
            "nodeType": "FunctionDefinition",
            "src": "3619:199:38",
            "nodes": [],
            "body": {
              "id": 45848,
              "nodeType": "Block",
              "src": "3690:128:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45835,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3747:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSale_$45850",
                              "typeString": "contract TokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSale_$45850",
                              "typeString": "contract TokenSale"
                            }
                          ],
                          "id": 45834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3739:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45833,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3739:7:38",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3739:13:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45837,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45819,
                        "src": "3754:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45841,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3783:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenSale_$45850",
                                  "typeString": "contract TokenSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenSale_$45850",
                                  "typeString": "contract TokenSale"
                                }
                              ],
                              "id": 45840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3775:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45839,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3775:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3775:13:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45838,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44319,
                          "src": "3765:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 45843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3765:24:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45829,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3715:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenSale_$45850",
                                  "typeString": "contract TokenSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenSale_$45850",
                                  "typeString": "contract TokenSale"
                                }
                              ],
                              "id": 45828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3707:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45827,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3707:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3707:13:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45826,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44811,
                          "src": "3700:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44811_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 45831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3700:21:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44811",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3722:16:38",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44950,
                      "src": "3700:38:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44811_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44811_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 45844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3700:90:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45845,
                  "nodeType": "ExpressionStatement",
                  "src": "3700:90:38"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 45846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3807:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 45825,
                  "id": 45847,
                  "nodeType": "Return",
                  "src": "3800:11:38"
                }
              ]
            },
            "documentation": {
              "id": 45817,
              "nodeType": "StructuredDocumentation",
              "src": "3437:177:38",
              "text": "@notice Withdraw reserve tokens from the contract\n@dev Only the owner can withdraw the reserve tokens\n@param _receiver The address to receive the reserve tokens"
            },
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45822,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45821,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3665:9:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43906,
                  "src": "3665:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3665:9:38"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3628:8:38",
            "parameters": {
              "id": 45820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45819,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "3645:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 45849,
                  "src": "3637:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3637:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3636:19:38"
            },
            "returnParameters": {
              "id": 45825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45849,
                  "src": "3684:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:6:38"
            },
            "scope": 45850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45577,
              "name": "Ownable2Step",
              "nameLocations": [
                "665:12:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44081,
              "src": "665:12:38"
            },
            "id": 45578,
            "nodeType": "InheritanceSpecifier",
            "src": "665:12:38"
          },
          {
            "baseName": {
              "id": 45579,
              "name": "ERC20",
              "nameLocations": [
                "679:5:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44733,
              "src": "679:5:38"
            },
            "id": 45580,
            "nodeType": "InheritanceSpecifier",
            "src": "679:5:38"
          },
          {
            "baseName": {
              "id": 45581,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "686:15:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45507,
              "src": "686:15:38"
            },
            "id": 45582,
            "nodeType": "InheritanceSpecifier",
            "src": "686:15:38"
          }
        ],
        "canonicalName": "TokenSale",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 45576,
          "nodeType": "StructuredDocumentation",
          "src": "430:212:38",
          "text": "@title Token sale and buyback with bonding curve\n @author Mehdi R.\n @notice The more tokens a user buys, the more expensive the token becomes\n @dev This contract inherits from ERC20 and Ownable2Step"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45850,
          45507,
          44733,
          44123,
          44837,
          44811,
          44081,
          43995,
          45438
        ],
        "name": "TokenSale",
        "nameLocation": "652:9:38",
        "scope": 45851,
        "usedErrors": [
          43861,
          43866,
          44093,
          44098,
          44103,
          44112,
          44117,
          44122,
          44890,
          45171,
          45176,
          45179,
          45452,
          45621
        ],
        "usedEvents": [
          43872,
          44010,
          44745,
          44754,
          45609,
          45615
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 38
}